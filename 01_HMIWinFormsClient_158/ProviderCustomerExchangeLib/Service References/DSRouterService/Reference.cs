//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProviderCustomerExchangeLib.DSRouterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DSTagValue", Namespace="http://schemas.datacontract.org/2004/07/DSRouterService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ProviderCustomerExchangeLib.DSRouterService.LstError))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue>))]
    public partial class DSTagValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint VarQualityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object VarValueAsObjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint VarQuality {
            get {
                return this.VarQualityField;
            }
            set {
                if ((this.VarQualityField.Equals(value) != true)) {
                    this.VarQualityField = value;
                    this.RaisePropertyChanged("VarQuality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object VarValueAsObject {
            get {
                return this.VarValueAsObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.VarValueAsObjectField, value) != true)) {
                    this.VarValueAsObjectField = value;
                    this.RaisePropertyChanged("VarValueAsObject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LstError", Namespace="http://schemas.datacontract.org/2004/07/WcfDataServer_Lib")]
    [System.SerializableAttribute()]
    public partial class LstError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstError {
            get {
                return this.lstErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.lstErrorField, value) != true)) {
                    this.lstErrorField = value;
                    this.RaisePropertyChanged("lstError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DSRouterService.IDSRouter", CallbackContract=typeof(ProviderCustomerExchangeLib.DSRouterService.IDSRouterCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDSRouter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSValueAsByteBuffer", ReplyAction="http://tempuri.org/IDSRouter/GetDSValueAsByteBufferResponse")]
        byte[] GetDSValueAsByteBuffer(ushort DSGuid, byte[] arr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSValueAsByteBuffer", ReplyAction="http://tempuri.org/IDSRouter/GetDSValueAsByteBufferResponse")]
        System.IAsyncResult BeginGetDSValueAsByteBuffer(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDSValueAsByteBuffer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSOscByIdInBD", ReplyAction="http://tempuri.org/IDSRouter/GetDSOscByIdInBDResponse")]
        byte[] GetDSOscByIdInBD(ushort DSGuid, byte[] arr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSOscByIdInBD", ReplyAction="http://tempuri.org/IDSRouter/GetDSOscByIdInBDResponse")]
        System.IAsyncResult BeginGetDSOscByIdInBD(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDSOscByIdInBD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/SetReq2ArhivInfo")]
        void SetReq2ArhivInfo(ushort DSGuid, byte[] arr);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/SetReq2ArhivInfo")]
        System.IAsyncResult BeginSetReq2ArhivInfo(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState);
        
        void EndSetReq2ArhivInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/RunCMDMOA", ReplyAction="http://tempuri.org/IDSRouter/RunCMDMOAResponse")]
        byte[] RunCMDMOA(ushort DSGuid, byte[] pq);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/RunCMDMOA", ReplyAction="http://tempuri.org/IDSRouter/RunCMDMOAResponse")]
        System.IAsyncResult BeginRunCMDMOA(ushort DSGuid, byte[] pq, System.AsyncCallback callback, object asyncState);
        
        byte[] EndRunCMDMOA(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/RunCMD", ReplyAction="http://tempuri.org/IDSRouter/RunCMDResponse")]
        bool RunCMD(string dsdevTagGUID, byte[] pq);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/RunCMD", ReplyAction="http://tempuri.org/IDSRouter/RunCMDResponse")]
        System.IAsyncResult BeginRunCMD(string dsdevTagGUID, byte[] pq, System.AsyncCallback callback, object asyncState);
        
        bool EndRunCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSConfigFile", ReplyAction="http://tempuri.org/IDSRouter/GetDSConfigFileResponse")]
        System.IO.Stream GetDSConfigFile(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSConfigFile", ReplyAction="http://tempuri.org/IDSRouter/GetDSConfigFileResponse")]
        System.IAsyncResult BeginGetDSConfigFile(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        System.IO.Stream EndGetDSConfigFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetDSGUIDsResponse")]
        string GetDSGUIDs();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetDSGUIDsResponse")]
        System.IAsyncResult BeginGetDSGUIDs(System.AsyncCallback callback, object asyncState);
        
        string EndGetDSGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSINFO", ReplyAction="http://tempuri.org/IDSRouter/GetDSINFOResponse")]
        string GetDSINFO(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSINFO", ReplyAction="http://tempuri.org/IDSRouter/GetDSINFOResponse")]
        System.IAsyncResult BeginGetDSINFO(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDSINFO(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetSourceGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetSourceGUIDsResponse")]
        string GetSourceGUIDs(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetSourceGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetSourceGUIDsResponse")]
        System.IAsyncResult BeginGetSourceGUIDs(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetSourceGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetSourceName", ReplyAction="http://tempuri.org/IDSRouter/GetSourceNameResponse")]
        string GetSourceName(ushort DSGuid, ushort SrcGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetSourceName", ReplyAction="http://tempuri.org/IDSRouter/GetSourceNameResponse")]
        System.IAsyncResult BeginGetSourceName(ushort DSGuid, ushort SrcGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetSourceName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetECUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetECUGUIDsResponse")]
        string GetECUGUIDs(ushort DSGuid, ushort SrcGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetECUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetECUGUIDsResponse")]
        System.IAsyncResult BeginGetECUGUIDs(ushort DSGuid, ushort SrcGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetECUGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetECUName", ReplyAction="http://tempuri.org/IDSRouter/GetECUNameResponse")]
        string GetECUName(ushort DSGuid, ushort SrcGuid, ushort EcuGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetECUName", ReplyAction="http://tempuri.org/IDSRouter/GetECUNameResponse")]
        System.IAsyncResult BeginGetECUName(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetECUName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetSrcEcuRTUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetSrcEcuRTUGUIDsResponse")]
        string GetSrcEcuRTUGUIDs(ushort DSGuid, ushort SrcGuid, ushort EcuGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetSrcEcuRTUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetSrcEcuRTUGUIDsResponse")]
        System.IAsyncResult BeginGetSrcEcuRTUGUIDs(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetSrcEcuRTUGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetRTUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetRTUGUIDsResponse")]
        string GetRTUGUIDs(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetRTUGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetRTUGUIDsResponse")]
        System.IAsyncResult BeginGetRTUGUIDs(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetRTUGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/IsRTUEnable", ReplyAction="http://tempuri.org/IDSRouter/IsRTUEnableResponse")]
        bool IsRTUEnable(ushort DSGuid, uint RtuGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/IsRTUEnable", ReplyAction="http://tempuri.org/IDSRouter/IsRTUEnableResponse")]
        System.IAsyncResult BeginIsRTUEnable(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState);
        
        bool EndIsRTUEnable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetRTUDescription", ReplyAction="http://tempuri.org/IDSRouter/GetRTUDescriptionResponse")]
        string GetRTUDescription(ushort DSGuid, uint RtuGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetRTUDescription", ReplyAction="http://tempuri.org/IDSRouter/GetRTUDescriptionResponse")]
        System.IAsyncResult BeginGetRTUDescription(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetRTUDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetGroupGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetGroupGUIDsResponse")]
        string GetGroupGUIDs(ushort DSGuid, uint RtuGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetGroupGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetGroupGUIDsResponse")]
        System.IAsyncResult BeginGetGroupGUIDs(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetGroupGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/IsGroupEnable", ReplyAction="http://tempuri.org/IDSRouter/IsGroupEnableResponse")]
        bool IsGroupEnable(ushort DSGuid, uint RtuGuid, uint GroupGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/IsGroupEnable", ReplyAction="http://tempuri.org/IDSRouter/IsGroupEnableResponse")]
        System.IAsyncResult BeginIsGroupEnable(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState);
        
        bool EndIsGroupEnable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetRTUGroupName", ReplyAction="http://tempuri.org/IDSRouter/GetRTUGroupNameResponse")]
        string GetRTUGroupName(ushort DSGuid, uint RtuGuid, uint GroupGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetRTUGroupName", ReplyAction="http://tempuri.org/IDSRouter/GetRTUGroupNameResponse")]
        System.IAsyncResult BeginGetRTUGroupName(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetRTUGroupName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetSubGroupGUIDsInGroup", ReplyAction="http://tempuri.org/IDSRouter/GetSubGroupGUIDsInGroupResponse")]
        string GetSubGroupGUIDsInGroup(ushort DSGuid, uint RtuGuid, uint GroupGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetSubGroupGUIDsInGroup", ReplyAction="http://tempuri.org/IDSRouter/GetSubGroupGUIDsInGroupResponse")]
        System.IAsyncResult BeginGetSubGroupGUIDsInGroup(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetSubGroupGUIDsInGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetRtuGroupTagGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetRtuGroupTagGUIDsResponse")]
        string GetRtuGroupTagGUIDs(ushort DSGuid, uint RtuGuid, uint GroupGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetRtuGroupTagGUIDs", ReplyAction="http://tempuri.org/IDSRouter/GetRtuGroupTagGUIDsResponse")]
        System.IAsyncResult BeginGetRtuGroupTagGUIDs(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetRtuGroupTagGUIDs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetRTUTagName", ReplyAction="http://tempuri.org/IDSRouter/GetRTUTagNameResponse")]
        string GetRTUTagName(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetRTUTagName", ReplyAction="http://tempuri.org/IDSRouter/GetRTUTagNameResponse")]
        System.IAsyncResult BeginGetRTUTagName(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID, System.AsyncCallback callback, object asyncState);
        
        string EndGetRTUTagName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetTagsValue", ReplyAction="http://tempuri.org/IDSRouter/GetTagsValueResponse")]
        System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> GetTagsValue(string[] request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetTagsValue", ReplyAction="http://tempuri.org/IDSRouter/GetTagsValueResponse")]
        System.IAsyncResult BeginGetTagsValue(string[] request, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> EndGetTagsValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetTagsValuesUpdated", ReplyAction="http://tempuri.org/IDSRouter/GetTagsValuesUpdatedResponse")]
        System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> GetTagsValuesUpdated();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetTagsValuesUpdated", ReplyAction="http://tempuri.org/IDSRouter/GetTagsValuesUpdatedResponse")]
        System.IAsyncResult BeginGetTagsValuesUpdated(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> EndGetTagsValuesUpdated(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/SubscribeRTUTags")]
        void SubscribeRTUTags(string[] request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/SubscribeRTUTags")]
        System.IAsyncResult BeginSubscribeRTUTags(string[] request, System.AsyncCallback callback, object asyncState);
        
        void EndSubscribeRTUTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/UnscribeRTUTags")]
        void UnscribeRTUTags(string[] request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/UnscribeRTUTags")]
        System.IAsyncResult BeginUnscribeRTUTags(string[] request, System.AsyncCallback callback, object asyncState);
        
        void EndUnscribeRTUTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSLastErrorsGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSLastErrorsGUIDResponse")]
        ProviderCustomerExchangeLib.DSRouterService.LstError GetDSLastErrorsGUID(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSLastErrorsGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSLastErrorsGUIDResponse")]
        System.IAsyncResult BeginGetDSLastErrorsGUID(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        ProviderCustomerExchangeLib.DSRouterService.LstError EndGetDSLastErrorsGUID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSLastErrorGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSLastErrorGUIDResponse")]
        string GetDSLastErrorGUID(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSLastErrorGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSLastErrorGUIDResponse")]
        System.IAsyncResult BeginGetDSLastErrorGUID(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        string EndGetDSLastErrorGUID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDSRouter/GetDSErrorTextByErrorGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSErrorTextByErrorGUIDResponse")]
        string GetDSErrorTextByErrorGUID(ushort DSGuid, string errorGUID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDSRouter/GetDSErrorTextByErrorGUID", ReplyAction="http://tempuri.org/IDSRouter/GetDSErrorTextByErrorGUIDResponse")]
        System.IAsyncResult BeginGetDSErrorTextByErrorGUID(ushort DSGuid, string errorGUID, System.AsyncCallback callback, object asyncState);
        
        string EndGetDSErrorTextByErrorGUID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/AcknowledgementOfErrors")]
        void AcknowledgementOfErrors(ushort DSGuid);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/AcknowledgementOfErrors")]
        System.IAsyncResult BeginAcknowledgementOfErrors(ushort DSGuid, System.AsyncCallback callback, object asyncState);
        
        void EndAcknowledgementOfErrors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/RegisterForErrorEvent")]
        void RegisterForErrorEvent(string keyticker);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/RegisterForErrorEvent")]
        System.IAsyncResult BeginRegisterForErrorEvent(string keyticker, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterForErrorEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/Ping")]
        void Ping();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/Ping")]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        void EndPing(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDSRouterCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/NewErrorEvent")]
        void NewErrorEvent(string codeDataTimeEvent);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/NewErrorEvent")]
        System.IAsyncResult BeginNewErrorEvent(string codeDataTimeEvent, System.AsyncCallback callback, object asyncState);
        
        void EndNewErrorEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/Pong")]
        void Pong();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/Pong")]
        System.IAsyncResult BeginPong(System.AsyncCallback callback, object asyncState);
        
        void EndPong(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/NotifyChangedTags")]
        void NotifyChangedTags(System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> lstChangedTags);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/NotifyChangedTags")]
        System.IAsyncResult BeginNotifyChangedTags(System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> lstChangedTags, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyChangedTags(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDSRouter/NotifyCMDExecuted")]
        void NotifyCMDExecuted(byte[] cmdarray);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IDSRouter/NotifyCMDExecuted")]
        System.IAsyncResult BeginNotifyCMDExecuted(byte[] cmdarray, System.AsyncCallback callback, object asyncState);
        
        void EndNotifyCMDExecuted(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDSRouterChannel : ProviderCustomerExchangeLib.DSRouterService.IDSRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSValueAsByteBufferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSValueAsByteBufferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSOscByIdInBDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSOscByIdInBDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunCMDMOACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunCMDMOACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunCMDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunCMDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSConfigFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSConfigFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.IO.Stream Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.IO.Stream)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourceGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourceGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSourceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSourceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetECUGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetECUGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetECUNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetECUNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSrcEcuRTUGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSrcEcuRTUGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRTUGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRTUGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsRTUEnableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsRTUEnableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRTUDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRTUDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsGroupEnableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsGroupEnableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRTUGroupNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRTUGroupNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubGroupGUIDsInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubGroupGUIDsInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRtuGroupTagGUIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRtuGroupTagGUIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRTUTagNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRTUTagNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagsValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagsValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTagsValuesUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTagsValuesUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSLastErrorsGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSLastErrorsGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ProviderCustomerExchangeLib.DSRouterService.LstError Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ProviderCustomerExchangeLib.DSRouterService.LstError)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSLastErrorGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSLastErrorGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDSErrorTextByErrorGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDSErrorTextByErrorGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DSRouterClient : System.ServiceModel.DuplexClientBase<ProviderCustomerExchangeLib.DSRouterService.IDSRouter>, ProviderCustomerExchangeLib.DSRouterService.IDSRouter {
        
        private BeginOperationDelegate onBeginGetDSValueAsByteBufferDelegate;
        
        private EndOperationDelegate onEndGetDSValueAsByteBufferDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSValueAsByteBufferCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSOscByIdInBDDelegate;
        
        private EndOperationDelegate onEndGetDSOscByIdInBDDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSOscByIdInBDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetReq2ArhivInfoDelegate;
        
        private EndOperationDelegate onEndSetReq2ArhivInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSetReq2ArhivInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunCMDMOADelegate;
        
        private EndOperationDelegate onEndRunCMDMOADelegate;
        
        private System.Threading.SendOrPostCallback onRunCMDMOACompletedDelegate;
        
        private BeginOperationDelegate onBeginRunCMDDelegate;
        
        private EndOperationDelegate onEndRunCMDDelegate;
        
        private System.Threading.SendOrPostCallback onRunCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSConfigFileDelegate;
        
        private EndOperationDelegate onEndGetDSConfigFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSConfigFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSGUIDsDelegate;
        
        private EndOperationDelegate onEndGetDSGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSINFODelegate;
        
        private EndOperationDelegate onEndGetDSINFODelegate;
        
        private System.Threading.SendOrPostCallback onGetDSINFOCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourceGUIDsDelegate;
        
        private EndOperationDelegate onEndGetSourceGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourceGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSourceNameDelegate;
        
        private EndOperationDelegate onEndGetSourceNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetSourceNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetECUGUIDsDelegate;
        
        private EndOperationDelegate onEndGetECUGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetECUGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetECUNameDelegate;
        
        private EndOperationDelegate onEndGetECUNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetECUNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSrcEcuRTUGUIDsDelegate;
        
        private EndOperationDelegate onEndGetSrcEcuRTUGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSrcEcuRTUGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRTUGUIDsDelegate;
        
        private EndOperationDelegate onEndGetRTUGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRTUGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsRTUEnableDelegate;
        
        private EndOperationDelegate onEndIsRTUEnableDelegate;
        
        private System.Threading.SendOrPostCallback onIsRTUEnableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRTUDescriptionDelegate;
        
        private EndOperationDelegate onEndGetRTUDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetRTUDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupGUIDsDelegate;
        
        private EndOperationDelegate onEndGetGroupGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsGroupEnableDelegate;
        
        private EndOperationDelegate onEndIsGroupEnableDelegate;
        
        private System.Threading.SendOrPostCallback onIsGroupEnableCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRTUGroupNameDelegate;
        
        private EndOperationDelegate onEndGetRTUGroupNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetRTUGroupNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubGroupGUIDsInGroupDelegate;
        
        private EndOperationDelegate onEndGetSubGroupGUIDsInGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubGroupGUIDsInGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRtuGroupTagGUIDsDelegate;
        
        private EndOperationDelegate onEndGetRtuGroupTagGUIDsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRtuGroupTagGUIDsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRTUTagNameDelegate;
        
        private EndOperationDelegate onEndGetRTUTagNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetRTUTagNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagsValueDelegate;
        
        private EndOperationDelegate onEndGetTagsValueDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagsValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTagsValuesUpdatedDelegate;
        
        private EndOperationDelegate onEndGetTagsValuesUpdatedDelegate;
        
        private System.Threading.SendOrPostCallback onGetTagsValuesUpdatedCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubscribeRTUTagsDelegate;
        
        private EndOperationDelegate onEndSubscribeRTUTagsDelegate;
        
        private System.Threading.SendOrPostCallback onSubscribeRTUTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnscribeRTUTagsDelegate;
        
        private EndOperationDelegate onEndUnscribeRTUTagsDelegate;
        
        private System.Threading.SendOrPostCallback onUnscribeRTUTagsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSLastErrorsGUIDDelegate;
        
        private EndOperationDelegate onEndGetDSLastErrorsGUIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSLastErrorsGUIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSLastErrorGUIDDelegate;
        
        private EndOperationDelegate onEndGetDSLastErrorGUIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSLastErrorGUIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDSErrorTextByErrorGUIDDelegate;
        
        private EndOperationDelegate onEndGetDSErrorTextByErrorGUIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetDSErrorTextByErrorGUIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcknowledgementOfErrorsDelegate;
        
        private EndOperationDelegate onEndAcknowledgementOfErrorsDelegate;
        
        private System.Threading.SendOrPostCallback onAcknowledgementOfErrorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterForErrorEventDelegate;
        
        private EndOperationDelegate onEndRegisterForErrorEventDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterForErrorEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        public DSRouterClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DSRouterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DSRouterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DSRouterClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DSRouterClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDSValueAsByteBufferCompletedEventArgs> GetDSValueAsByteBufferCompleted;
        
        public event System.EventHandler<GetDSOscByIdInBDCompletedEventArgs> GetDSOscByIdInBDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetReq2ArhivInfoCompleted;
        
        public event System.EventHandler<RunCMDMOACompletedEventArgs> RunCMDMOACompleted;
        
        public event System.EventHandler<RunCMDCompletedEventArgs> RunCMDCompleted;
        
        public event System.EventHandler<GetDSConfigFileCompletedEventArgs> GetDSConfigFileCompleted;
        
        public event System.EventHandler<GetDSGUIDsCompletedEventArgs> GetDSGUIDsCompleted;
        
        public event System.EventHandler<GetDSINFOCompletedEventArgs> GetDSINFOCompleted;
        
        public event System.EventHandler<GetSourceGUIDsCompletedEventArgs> GetSourceGUIDsCompleted;
        
        public event System.EventHandler<GetSourceNameCompletedEventArgs> GetSourceNameCompleted;
        
        public event System.EventHandler<GetECUGUIDsCompletedEventArgs> GetECUGUIDsCompleted;
        
        public event System.EventHandler<GetECUNameCompletedEventArgs> GetECUNameCompleted;
        
        public event System.EventHandler<GetSrcEcuRTUGUIDsCompletedEventArgs> GetSrcEcuRTUGUIDsCompleted;
        
        public event System.EventHandler<GetRTUGUIDsCompletedEventArgs> GetRTUGUIDsCompleted;
        
        public event System.EventHandler<IsRTUEnableCompletedEventArgs> IsRTUEnableCompleted;
        
        public event System.EventHandler<GetRTUDescriptionCompletedEventArgs> GetRTUDescriptionCompleted;
        
        public event System.EventHandler<GetGroupGUIDsCompletedEventArgs> GetGroupGUIDsCompleted;
        
        public event System.EventHandler<IsGroupEnableCompletedEventArgs> IsGroupEnableCompleted;
        
        public event System.EventHandler<GetRTUGroupNameCompletedEventArgs> GetRTUGroupNameCompleted;
        
        public event System.EventHandler<GetSubGroupGUIDsInGroupCompletedEventArgs> GetSubGroupGUIDsInGroupCompleted;
        
        public event System.EventHandler<GetRtuGroupTagGUIDsCompletedEventArgs> GetRtuGroupTagGUIDsCompleted;
        
        public event System.EventHandler<GetRTUTagNameCompletedEventArgs> GetRTUTagNameCompleted;
        
        public event System.EventHandler<GetTagsValueCompletedEventArgs> GetTagsValueCompleted;
        
        public event System.EventHandler<GetTagsValuesUpdatedCompletedEventArgs> GetTagsValuesUpdatedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubscribeRTUTagsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnscribeRTUTagsCompleted;
        
        public event System.EventHandler<GetDSLastErrorsGUIDCompletedEventArgs> GetDSLastErrorsGUIDCompleted;
        
        public event System.EventHandler<GetDSLastErrorGUIDCompletedEventArgs> GetDSLastErrorGUIDCompleted;
        
        public event System.EventHandler<GetDSErrorTextByErrorGUIDCompletedEventArgs> GetDSErrorTextByErrorGUIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AcknowledgementOfErrorsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterForErrorEventCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PingCompleted;
        
        public byte[] GetDSValueAsByteBuffer(ushort DSGuid, byte[] arr) {
            return base.Channel.GetDSValueAsByteBuffer(DSGuid, arr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSValueAsByteBuffer(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSValueAsByteBuffer(DSGuid, arr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDSValueAsByteBuffer(System.IAsyncResult result) {
            return base.Channel.EndGetDSValueAsByteBuffer(result);
        }
        
        private System.IAsyncResult OnBeginGetDSValueAsByteBuffer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            byte[] arr = ((byte[])(inValues[1]));
            return this.BeginGetDSValueAsByteBuffer(DSGuid, arr, callback, asyncState);
        }
        
        private object[] OnEndGetDSValueAsByteBuffer(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDSValueAsByteBuffer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSValueAsByteBufferCompleted(object state) {
            if ((this.GetDSValueAsByteBufferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSValueAsByteBufferCompleted(this, new GetDSValueAsByteBufferCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSValueAsByteBufferAsync(ushort DSGuid, byte[] arr) {
            this.GetDSValueAsByteBufferAsync(DSGuid, arr, null);
        }
        
        public void GetDSValueAsByteBufferAsync(ushort DSGuid, byte[] arr, object userState) {
            if ((this.onBeginGetDSValueAsByteBufferDelegate == null)) {
                this.onBeginGetDSValueAsByteBufferDelegate = new BeginOperationDelegate(this.OnBeginGetDSValueAsByteBuffer);
            }
            if ((this.onEndGetDSValueAsByteBufferDelegate == null)) {
                this.onEndGetDSValueAsByteBufferDelegate = new EndOperationDelegate(this.OnEndGetDSValueAsByteBuffer);
            }
            if ((this.onGetDSValueAsByteBufferCompletedDelegate == null)) {
                this.onGetDSValueAsByteBufferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSValueAsByteBufferCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSValueAsByteBufferDelegate, new object[] {
                        DSGuid,
                        arr}, this.onEndGetDSValueAsByteBufferDelegate, this.onGetDSValueAsByteBufferCompletedDelegate, userState);
        }
        
        public byte[] GetDSOscByIdInBD(ushort DSGuid, byte[] arr) {
            return base.Channel.GetDSOscByIdInBD(DSGuid, arr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSOscByIdInBD(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSOscByIdInBD(DSGuid, arr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDSOscByIdInBD(System.IAsyncResult result) {
            return base.Channel.EndGetDSOscByIdInBD(result);
        }
        
        private System.IAsyncResult OnBeginGetDSOscByIdInBD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            byte[] arr = ((byte[])(inValues[1]));
            return this.BeginGetDSOscByIdInBD(DSGuid, arr, callback, asyncState);
        }
        
        private object[] OnEndGetDSOscByIdInBD(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDSOscByIdInBD(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSOscByIdInBDCompleted(object state) {
            if ((this.GetDSOscByIdInBDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSOscByIdInBDCompleted(this, new GetDSOscByIdInBDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSOscByIdInBDAsync(ushort DSGuid, byte[] arr) {
            this.GetDSOscByIdInBDAsync(DSGuid, arr, null);
        }
        
        public void GetDSOscByIdInBDAsync(ushort DSGuid, byte[] arr, object userState) {
            if ((this.onBeginGetDSOscByIdInBDDelegate == null)) {
                this.onBeginGetDSOscByIdInBDDelegate = new BeginOperationDelegate(this.OnBeginGetDSOscByIdInBD);
            }
            if ((this.onEndGetDSOscByIdInBDDelegate == null)) {
                this.onEndGetDSOscByIdInBDDelegate = new EndOperationDelegate(this.OnEndGetDSOscByIdInBD);
            }
            if ((this.onGetDSOscByIdInBDCompletedDelegate == null)) {
                this.onGetDSOscByIdInBDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSOscByIdInBDCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSOscByIdInBDDelegate, new object[] {
                        DSGuid,
                        arr}, this.onEndGetDSOscByIdInBDDelegate, this.onGetDSOscByIdInBDCompletedDelegate, userState);
        }
        
        public void SetReq2ArhivInfo(ushort DSGuid, byte[] arr) {
            base.Channel.SetReq2ArhivInfo(DSGuid, arr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetReq2ArhivInfo(ushort DSGuid, byte[] arr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetReq2ArhivInfo(DSGuid, arr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetReq2ArhivInfo(System.IAsyncResult result) {
            base.Channel.EndSetReq2ArhivInfo(result);
        }
        
        private System.IAsyncResult OnBeginSetReq2ArhivInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            byte[] arr = ((byte[])(inValues[1]));
            return this.BeginSetReq2ArhivInfo(DSGuid, arr, callback, asyncState);
        }
        
        private object[] OnEndSetReq2ArhivInfo(System.IAsyncResult result) {
            this.EndSetReq2ArhivInfo(result);
            return null;
        }
        
        private void OnSetReq2ArhivInfoCompleted(object state) {
            if ((this.SetReq2ArhivInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetReq2ArhivInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetReq2ArhivInfoAsync(ushort DSGuid, byte[] arr) {
            this.SetReq2ArhivInfoAsync(DSGuid, arr, null);
        }
        
        public void SetReq2ArhivInfoAsync(ushort DSGuid, byte[] arr, object userState) {
            if ((this.onBeginSetReq2ArhivInfoDelegate == null)) {
                this.onBeginSetReq2ArhivInfoDelegate = new BeginOperationDelegate(this.OnBeginSetReq2ArhivInfo);
            }
            if ((this.onEndSetReq2ArhivInfoDelegate == null)) {
                this.onEndSetReq2ArhivInfoDelegate = new EndOperationDelegate(this.OnEndSetReq2ArhivInfo);
            }
            if ((this.onSetReq2ArhivInfoCompletedDelegate == null)) {
                this.onSetReq2ArhivInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetReq2ArhivInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSetReq2ArhivInfoDelegate, new object[] {
                        DSGuid,
                        arr}, this.onEndSetReq2ArhivInfoDelegate, this.onSetReq2ArhivInfoCompletedDelegate, userState);
        }
        
        public byte[] RunCMDMOA(ushort DSGuid, byte[] pq) {
            return base.Channel.RunCMDMOA(DSGuid, pq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunCMDMOA(ushort DSGuid, byte[] pq, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunCMDMOA(DSGuid, pq, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndRunCMDMOA(System.IAsyncResult result) {
            return base.Channel.EndRunCMDMOA(result);
        }
        
        private System.IAsyncResult OnBeginRunCMDMOA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            byte[] pq = ((byte[])(inValues[1]));
            return this.BeginRunCMDMOA(DSGuid, pq, callback, asyncState);
        }
        
        private object[] OnEndRunCMDMOA(System.IAsyncResult result) {
            byte[] retVal = this.EndRunCMDMOA(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunCMDMOACompleted(object state) {
            if ((this.RunCMDMOACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunCMDMOACompleted(this, new RunCMDMOACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunCMDMOAAsync(ushort DSGuid, byte[] pq) {
            this.RunCMDMOAAsync(DSGuid, pq, null);
        }
        
        public void RunCMDMOAAsync(ushort DSGuid, byte[] pq, object userState) {
            if ((this.onBeginRunCMDMOADelegate == null)) {
                this.onBeginRunCMDMOADelegate = new BeginOperationDelegate(this.OnBeginRunCMDMOA);
            }
            if ((this.onEndRunCMDMOADelegate == null)) {
                this.onEndRunCMDMOADelegate = new EndOperationDelegate(this.OnEndRunCMDMOA);
            }
            if ((this.onRunCMDMOACompletedDelegate == null)) {
                this.onRunCMDMOACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunCMDMOACompleted);
            }
            base.InvokeAsync(this.onBeginRunCMDMOADelegate, new object[] {
                        DSGuid,
                        pq}, this.onEndRunCMDMOADelegate, this.onRunCMDMOACompletedDelegate, userState);
        }
        
        public bool RunCMD(string dsdevTagGUID, byte[] pq) {
            return base.Channel.RunCMD(dsdevTagGUID, pq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunCMD(string dsdevTagGUID, byte[] pq, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunCMD(dsdevTagGUID, pq, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRunCMD(System.IAsyncResult result) {
            return base.Channel.EndRunCMD(result);
        }
        
        private System.IAsyncResult OnBeginRunCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string dsdevTagGUID = ((string)(inValues[0]));
            byte[] pq = ((byte[])(inValues[1]));
            return this.BeginRunCMD(dsdevTagGUID, pq, callback, asyncState);
        }
        
        private object[] OnEndRunCMD(System.IAsyncResult result) {
            bool retVal = this.EndRunCMD(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunCMDCompleted(object state) {
            if ((this.RunCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunCMDCompleted(this, new RunCMDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunCMDAsync(string dsdevTagGUID, byte[] pq) {
            this.RunCMDAsync(dsdevTagGUID, pq, null);
        }
        
        public void RunCMDAsync(string dsdevTagGUID, byte[] pq, object userState) {
            if ((this.onBeginRunCMDDelegate == null)) {
                this.onBeginRunCMDDelegate = new BeginOperationDelegate(this.OnBeginRunCMD);
            }
            if ((this.onEndRunCMDDelegate == null)) {
                this.onEndRunCMDDelegate = new EndOperationDelegate(this.OnEndRunCMD);
            }
            if ((this.onRunCMDCompletedDelegate == null)) {
                this.onRunCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunCMDCompleted);
            }
            base.InvokeAsync(this.onBeginRunCMDDelegate, new object[] {
                        dsdevTagGUID,
                        pq}, this.onEndRunCMDDelegate, this.onRunCMDCompletedDelegate, userState);
        }
        
        public System.IO.Stream GetDSConfigFile(ushort DSGuid) {
            return base.Channel.GetDSConfigFile(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSConfigFile(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSConfigFile(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IO.Stream EndGetDSConfigFile(System.IAsyncResult result) {
            return base.Channel.EndGetDSConfigFile(result);
        }
        
        private System.IAsyncResult OnBeginGetDSConfigFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetDSConfigFile(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetDSConfigFile(System.IAsyncResult result) {
            System.IO.Stream retVal = this.EndGetDSConfigFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSConfigFileCompleted(object state) {
            if ((this.GetDSConfigFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSConfigFileCompleted(this, new GetDSConfigFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSConfigFileAsync(ushort DSGuid) {
            this.GetDSConfigFileAsync(DSGuid, null);
        }
        
        public void GetDSConfigFileAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetDSConfigFileDelegate == null)) {
                this.onBeginGetDSConfigFileDelegate = new BeginOperationDelegate(this.OnBeginGetDSConfigFile);
            }
            if ((this.onEndGetDSConfigFileDelegate == null)) {
                this.onEndGetDSConfigFileDelegate = new EndOperationDelegate(this.OnEndGetDSConfigFile);
            }
            if ((this.onGetDSConfigFileCompletedDelegate == null)) {
                this.onGetDSConfigFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSConfigFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSConfigFileDelegate, new object[] {
                        DSGuid}, this.onEndGetDSConfigFileDelegate, this.onGetDSConfigFileCompletedDelegate, userState);
        }
        
        public string GetDSGUIDs() {
            return base.Channel.GetDSGUIDs();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSGUIDs(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSGUIDs(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDSGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetDSGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetDSGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDSGUIDs(callback, asyncState);
        }
        
        private object[] OnEndGetDSGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetDSGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSGUIDsCompleted(object state) {
            if ((this.GetDSGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSGUIDsCompleted(this, new GetDSGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSGUIDsAsync() {
            this.GetDSGUIDsAsync(null);
        }
        
        public void GetDSGUIDsAsync(object userState) {
            if ((this.onBeginGetDSGUIDsDelegate == null)) {
                this.onBeginGetDSGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetDSGUIDs);
            }
            if ((this.onEndGetDSGUIDsDelegate == null)) {
                this.onEndGetDSGUIDsDelegate = new EndOperationDelegate(this.OnEndGetDSGUIDs);
            }
            if ((this.onGetDSGUIDsCompletedDelegate == null)) {
                this.onGetDSGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSGUIDsDelegate, null, this.onEndGetDSGUIDsDelegate, this.onGetDSGUIDsCompletedDelegate, userState);
        }
        
        public string GetDSINFO(ushort DSGuid) {
            return base.Channel.GetDSINFO(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSINFO(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSINFO(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDSINFO(System.IAsyncResult result) {
            return base.Channel.EndGetDSINFO(result);
        }
        
        private System.IAsyncResult OnBeginGetDSINFO(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetDSINFO(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetDSINFO(System.IAsyncResult result) {
            string retVal = this.EndGetDSINFO(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSINFOCompleted(object state) {
            if ((this.GetDSINFOCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSINFOCompleted(this, new GetDSINFOCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSINFOAsync(ushort DSGuid) {
            this.GetDSINFOAsync(DSGuid, null);
        }
        
        public void GetDSINFOAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetDSINFODelegate == null)) {
                this.onBeginGetDSINFODelegate = new BeginOperationDelegate(this.OnBeginGetDSINFO);
            }
            if ((this.onEndGetDSINFODelegate == null)) {
                this.onEndGetDSINFODelegate = new EndOperationDelegate(this.OnEndGetDSINFO);
            }
            if ((this.onGetDSINFOCompletedDelegate == null)) {
                this.onGetDSINFOCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSINFOCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSINFODelegate, new object[] {
                        DSGuid}, this.onEndGetDSINFODelegate, this.onGetDSINFOCompletedDelegate, userState);
        }
        
        public string GetSourceGUIDs(ushort DSGuid) {
            return base.Channel.GetSourceGUIDs(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSourceGUIDs(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourceGUIDs(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSourceGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetSourceGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetSourceGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetSourceGUIDs(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetSourceGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetSourceGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourceGUIDsCompleted(object state) {
            if ((this.GetSourceGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourceGUIDsCompleted(this, new GetSourceGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourceGUIDsAsync(ushort DSGuid) {
            this.GetSourceGUIDsAsync(DSGuid, null);
        }
        
        public void GetSourceGUIDsAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetSourceGUIDsDelegate == null)) {
                this.onBeginGetSourceGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetSourceGUIDs);
            }
            if ((this.onEndGetSourceGUIDsDelegate == null)) {
                this.onEndGetSourceGUIDsDelegate = new EndOperationDelegate(this.OnEndGetSourceGUIDs);
            }
            if ((this.onGetSourceGUIDsCompletedDelegate == null)) {
                this.onGetSourceGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourceGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourceGUIDsDelegate, new object[] {
                        DSGuid}, this.onEndGetSourceGUIDsDelegate, this.onGetSourceGUIDsCompletedDelegate, userState);
        }
        
        public string GetSourceName(ushort DSGuid, ushort SrcGuid) {
            return base.Channel.GetSourceName(DSGuid, SrcGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSourceName(ushort DSGuid, ushort SrcGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSourceName(DSGuid, SrcGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSourceName(System.IAsyncResult result) {
            return base.Channel.EndGetSourceName(result);
        }
        
        private System.IAsyncResult OnBeginGetSourceName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            ushort SrcGuid = ((ushort)(inValues[1]));
            return this.BeginGetSourceName(DSGuid, SrcGuid, callback, asyncState);
        }
        
        private object[] OnEndGetSourceName(System.IAsyncResult result) {
            string retVal = this.EndGetSourceName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSourceNameCompleted(object state) {
            if ((this.GetSourceNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSourceNameCompleted(this, new GetSourceNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSourceNameAsync(ushort DSGuid, ushort SrcGuid) {
            this.GetSourceNameAsync(DSGuid, SrcGuid, null);
        }
        
        public void GetSourceNameAsync(ushort DSGuid, ushort SrcGuid, object userState) {
            if ((this.onBeginGetSourceNameDelegate == null)) {
                this.onBeginGetSourceNameDelegate = new BeginOperationDelegate(this.OnBeginGetSourceName);
            }
            if ((this.onEndGetSourceNameDelegate == null)) {
                this.onEndGetSourceNameDelegate = new EndOperationDelegate(this.OnEndGetSourceName);
            }
            if ((this.onGetSourceNameCompletedDelegate == null)) {
                this.onGetSourceNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSourceNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetSourceNameDelegate, new object[] {
                        DSGuid,
                        SrcGuid}, this.onEndGetSourceNameDelegate, this.onGetSourceNameCompletedDelegate, userState);
        }
        
        public string GetECUGUIDs(ushort DSGuid, ushort SrcGuid) {
            return base.Channel.GetECUGUIDs(DSGuid, SrcGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetECUGUIDs(ushort DSGuid, ushort SrcGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetECUGUIDs(DSGuid, SrcGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetECUGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetECUGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetECUGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            ushort SrcGuid = ((ushort)(inValues[1]));
            return this.BeginGetECUGUIDs(DSGuid, SrcGuid, callback, asyncState);
        }
        
        private object[] OnEndGetECUGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetECUGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetECUGUIDsCompleted(object state) {
            if ((this.GetECUGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetECUGUIDsCompleted(this, new GetECUGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetECUGUIDsAsync(ushort DSGuid, ushort SrcGuid) {
            this.GetECUGUIDsAsync(DSGuid, SrcGuid, null);
        }
        
        public void GetECUGUIDsAsync(ushort DSGuid, ushort SrcGuid, object userState) {
            if ((this.onBeginGetECUGUIDsDelegate == null)) {
                this.onBeginGetECUGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetECUGUIDs);
            }
            if ((this.onEndGetECUGUIDsDelegate == null)) {
                this.onEndGetECUGUIDsDelegate = new EndOperationDelegate(this.OnEndGetECUGUIDs);
            }
            if ((this.onGetECUGUIDsCompletedDelegate == null)) {
                this.onGetECUGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetECUGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetECUGUIDsDelegate, new object[] {
                        DSGuid,
                        SrcGuid}, this.onEndGetECUGUIDsDelegate, this.onGetECUGUIDsCompletedDelegate, userState);
        }
        
        public string GetECUName(ushort DSGuid, ushort SrcGuid, ushort EcuGuid) {
            return base.Channel.GetECUName(DSGuid, SrcGuid, EcuGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetECUName(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetECUName(DSGuid, SrcGuid, EcuGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetECUName(System.IAsyncResult result) {
            return base.Channel.EndGetECUName(result);
        }
        
        private System.IAsyncResult OnBeginGetECUName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            ushort SrcGuid = ((ushort)(inValues[1]));
            ushort EcuGuid = ((ushort)(inValues[2]));
            return this.BeginGetECUName(DSGuid, SrcGuid, EcuGuid, callback, asyncState);
        }
        
        private object[] OnEndGetECUName(System.IAsyncResult result) {
            string retVal = this.EndGetECUName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetECUNameCompleted(object state) {
            if ((this.GetECUNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetECUNameCompleted(this, new GetECUNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetECUNameAsync(ushort DSGuid, ushort SrcGuid, ushort EcuGuid) {
            this.GetECUNameAsync(DSGuid, SrcGuid, EcuGuid, null);
        }
        
        public void GetECUNameAsync(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, object userState) {
            if ((this.onBeginGetECUNameDelegate == null)) {
                this.onBeginGetECUNameDelegate = new BeginOperationDelegate(this.OnBeginGetECUName);
            }
            if ((this.onEndGetECUNameDelegate == null)) {
                this.onEndGetECUNameDelegate = new EndOperationDelegate(this.OnEndGetECUName);
            }
            if ((this.onGetECUNameCompletedDelegate == null)) {
                this.onGetECUNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetECUNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetECUNameDelegate, new object[] {
                        DSGuid,
                        SrcGuid,
                        EcuGuid}, this.onEndGetECUNameDelegate, this.onGetECUNameCompletedDelegate, userState);
        }
        
        public string GetSrcEcuRTUGUIDs(ushort DSGuid, ushort SrcGuid, ushort EcuGuid) {
            return base.Channel.GetSrcEcuRTUGUIDs(DSGuid, SrcGuid, EcuGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSrcEcuRTUGUIDs(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSrcEcuRTUGUIDs(DSGuid, SrcGuid, EcuGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSrcEcuRTUGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetSrcEcuRTUGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetSrcEcuRTUGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            ushort SrcGuid = ((ushort)(inValues[1]));
            ushort EcuGuid = ((ushort)(inValues[2]));
            return this.BeginGetSrcEcuRTUGUIDs(DSGuid, SrcGuid, EcuGuid, callback, asyncState);
        }
        
        private object[] OnEndGetSrcEcuRTUGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetSrcEcuRTUGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSrcEcuRTUGUIDsCompleted(object state) {
            if ((this.GetSrcEcuRTUGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSrcEcuRTUGUIDsCompleted(this, new GetSrcEcuRTUGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSrcEcuRTUGUIDsAsync(ushort DSGuid, ushort SrcGuid, ushort EcuGuid) {
            this.GetSrcEcuRTUGUIDsAsync(DSGuid, SrcGuid, EcuGuid, null);
        }
        
        public void GetSrcEcuRTUGUIDsAsync(ushort DSGuid, ushort SrcGuid, ushort EcuGuid, object userState) {
            if ((this.onBeginGetSrcEcuRTUGUIDsDelegate == null)) {
                this.onBeginGetSrcEcuRTUGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetSrcEcuRTUGUIDs);
            }
            if ((this.onEndGetSrcEcuRTUGUIDsDelegate == null)) {
                this.onEndGetSrcEcuRTUGUIDsDelegate = new EndOperationDelegate(this.OnEndGetSrcEcuRTUGUIDs);
            }
            if ((this.onGetSrcEcuRTUGUIDsCompletedDelegate == null)) {
                this.onGetSrcEcuRTUGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSrcEcuRTUGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSrcEcuRTUGUIDsDelegate, new object[] {
                        DSGuid,
                        SrcGuid,
                        EcuGuid}, this.onEndGetSrcEcuRTUGUIDsDelegate, this.onGetSrcEcuRTUGUIDsCompletedDelegate, userState);
        }
        
        public string GetRTUGUIDs(ushort DSGuid) {
            return base.Channel.GetRTUGUIDs(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRTUGUIDs(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRTUGUIDs(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRTUGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetRTUGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetRTUGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetRTUGUIDs(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetRTUGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetRTUGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRTUGUIDsCompleted(object state) {
            if ((this.GetRTUGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRTUGUIDsCompleted(this, new GetRTUGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRTUGUIDsAsync(ushort DSGuid) {
            this.GetRTUGUIDsAsync(DSGuid, null);
        }
        
        public void GetRTUGUIDsAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetRTUGUIDsDelegate == null)) {
                this.onBeginGetRTUGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetRTUGUIDs);
            }
            if ((this.onEndGetRTUGUIDsDelegate == null)) {
                this.onEndGetRTUGUIDsDelegate = new EndOperationDelegate(this.OnEndGetRTUGUIDs);
            }
            if ((this.onGetRTUGUIDsCompletedDelegate == null)) {
                this.onGetRTUGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRTUGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRTUGUIDsDelegate, new object[] {
                        DSGuid}, this.onEndGetRTUGUIDsDelegate, this.onGetRTUGUIDsCompletedDelegate, userState);
        }
        
        public bool IsRTUEnable(ushort DSGuid, uint RtuGuid) {
            return base.Channel.IsRTUEnable(DSGuid, RtuGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsRTUEnable(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsRTUEnable(DSGuid, RtuGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsRTUEnable(System.IAsyncResult result) {
            return base.Channel.EndIsRTUEnable(result);
        }
        
        private System.IAsyncResult OnBeginIsRTUEnable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            return this.BeginIsRTUEnable(DSGuid, RtuGuid, callback, asyncState);
        }
        
        private object[] OnEndIsRTUEnable(System.IAsyncResult result) {
            bool retVal = this.EndIsRTUEnable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsRTUEnableCompleted(object state) {
            if ((this.IsRTUEnableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsRTUEnableCompleted(this, new IsRTUEnableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsRTUEnableAsync(ushort DSGuid, uint RtuGuid) {
            this.IsRTUEnableAsync(DSGuid, RtuGuid, null);
        }
        
        public void IsRTUEnableAsync(ushort DSGuid, uint RtuGuid, object userState) {
            if ((this.onBeginIsRTUEnableDelegate == null)) {
                this.onBeginIsRTUEnableDelegate = new BeginOperationDelegate(this.OnBeginIsRTUEnable);
            }
            if ((this.onEndIsRTUEnableDelegate == null)) {
                this.onEndIsRTUEnableDelegate = new EndOperationDelegate(this.OnEndIsRTUEnable);
            }
            if ((this.onIsRTUEnableCompletedDelegate == null)) {
                this.onIsRTUEnableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsRTUEnableCompleted);
            }
            base.InvokeAsync(this.onBeginIsRTUEnableDelegate, new object[] {
                        DSGuid,
                        RtuGuid}, this.onEndIsRTUEnableDelegate, this.onIsRTUEnableCompletedDelegate, userState);
        }
        
        public string GetRTUDescription(ushort DSGuid, uint RtuGuid) {
            return base.Channel.GetRTUDescription(DSGuid, RtuGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRTUDescription(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRTUDescription(DSGuid, RtuGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRTUDescription(System.IAsyncResult result) {
            return base.Channel.EndGetRTUDescription(result);
        }
        
        private System.IAsyncResult OnBeginGetRTUDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            return this.BeginGetRTUDescription(DSGuid, RtuGuid, callback, asyncState);
        }
        
        private object[] OnEndGetRTUDescription(System.IAsyncResult result) {
            string retVal = this.EndGetRTUDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRTUDescriptionCompleted(object state) {
            if ((this.GetRTUDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRTUDescriptionCompleted(this, new GetRTUDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRTUDescriptionAsync(ushort DSGuid, uint RtuGuid) {
            this.GetRTUDescriptionAsync(DSGuid, RtuGuid, null);
        }
        
        public void GetRTUDescriptionAsync(ushort DSGuid, uint RtuGuid, object userState) {
            if ((this.onBeginGetRTUDescriptionDelegate == null)) {
                this.onBeginGetRTUDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGetRTUDescription);
            }
            if ((this.onEndGetRTUDescriptionDelegate == null)) {
                this.onEndGetRTUDescriptionDelegate = new EndOperationDelegate(this.OnEndGetRTUDescription);
            }
            if ((this.onGetRTUDescriptionCompletedDelegate == null)) {
                this.onGetRTUDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRTUDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetRTUDescriptionDelegate, new object[] {
                        DSGuid,
                        RtuGuid}, this.onEndGetRTUDescriptionDelegate, this.onGetRTUDescriptionCompletedDelegate, userState);
        }
        
        public string GetGroupGUIDs(ushort DSGuid, uint RtuGuid) {
            return base.Channel.GetGroupGUIDs(DSGuid, RtuGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGroupGUIDs(ushort DSGuid, uint RtuGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupGUIDs(DSGuid, RtuGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetGroupGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetGroupGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            return this.BeginGetGroupGUIDs(DSGuid, RtuGuid, callback, asyncState);
        }
        
        private object[] OnEndGetGroupGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetGroupGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupGUIDsCompleted(object state) {
            if ((this.GetGroupGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupGUIDsCompleted(this, new GetGroupGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupGUIDsAsync(ushort DSGuid, uint RtuGuid) {
            this.GetGroupGUIDsAsync(DSGuid, RtuGuid, null);
        }
        
        public void GetGroupGUIDsAsync(ushort DSGuid, uint RtuGuid, object userState) {
            if ((this.onBeginGetGroupGUIDsDelegate == null)) {
                this.onBeginGetGroupGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetGroupGUIDs);
            }
            if ((this.onEndGetGroupGUIDsDelegate == null)) {
                this.onEndGetGroupGUIDsDelegate = new EndOperationDelegate(this.OnEndGetGroupGUIDs);
            }
            if ((this.onGetGroupGUIDsCompletedDelegate == null)) {
                this.onGetGroupGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupGUIDsDelegate, new object[] {
                        DSGuid,
                        RtuGuid}, this.onEndGetGroupGUIDsDelegate, this.onGetGroupGUIDsCompletedDelegate, userState);
        }
        
        public bool IsGroupEnable(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            return base.Channel.IsGroupEnable(DSGuid, RtuGuid, GroupGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsGroupEnable(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsGroupEnable(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsGroupEnable(System.IAsyncResult result) {
            return base.Channel.EndIsGroupEnable(result);
        }
        
        private System.IAsyncResult OnBeginIsGroupEnable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            uint GroupGuid = ((uint)(inValues[2]));
            return this.BeginIsGroupEnable(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        private object[] OnEndIsGroupEnable(System.IAsyncResult result) {
            bool retVal = this.EndIsGroupEnable(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsGroupEnableCompleted(object state) {
            if ((this.IsGroupEnableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsGroupEnableCompleted(this, new IsGroupEnableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsGroupEnableAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            this.IsGroupEnableAsync(DSGuid, RtuGuid, GroupGuid, null);
        }
        
        public void IsGroupEnableAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, object userState) {
            if ((this.onBeginIsGroupEnableDelegate == null)) {
                this.onBeginIsGroupEnableDelegate = new BeginOperationDelegate(this.OnBeginIsGroupEnable);
            }
            if ((this.onEndIsGroupEnableDelegate == null)) {
                this.onEndIsGroupEnableDelegate = new EndOperationDelegate(this.OnEndIsGroupEnable);
            }
            if ((this.onIsGroupEnableCompletedDelegate == null)) {
                this.onIsGroupEnableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsGroupEnableCompleted);
            }
            base.InvokeAsync(this.onBeginIsGroupEnableDelegate, new object[] {
                        DSGuid,
                        RtuGuid,
                        GroupGuid}, this.onEndIsGroupEnableDelegate, this.onIsGroupEnableCompletedDelegate, userState);
        }
        
        public string GetRTUGroupName(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            return base.Channel.GetRTUGroupName(DSGuid, RtuGuid, GroupGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRTUGroupName(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRTUGroupName(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRTUGroupName(System.IAsyncResult result) {
            return base.Channel.EndGetRTUGroupName(result);
        }
        
        private System.IAsyncResult OnBeginGetRTUGroupName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            uint GroupGuid = ((uint)(inValues[2]));
            return this.BeginGetRTUGroupName(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        private object[] OnEndGetRTUGroupName(System.IAsyncResult result) {
            string retVal = this.EndGetRTUGroupName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRTUGroupNameCompleted(object state) {
            if ((this.GetRTUGroupNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRTUGroupNameCompleted(this, new GetRTUGroupNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRTUGroupNameAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            this.GetRTUGroupNameAsync(DSGuid, RtuGuid, GroupGuid, null);
        }
        
        public void GetRTUGroupNameAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, object userState) {
            if ((this.onBeginGetRTUGroupNameDelegate == null)) {
                this.onBeginGetRTUGroupNameDelegate = new BeginOperationDelegate(this.OnBeginGetRTUGroupName);
            }
            if ((this.onEndGetRTUGroupNameDelegate == null)) {
                this.onEndGetRTUGroupNameDelegate = new EndOperationDelegate(this.OnEndGetRTUGroupName);
            }
            if ((this.onGetRTUGroupNameCompletedDelegate == null)) {
                this.onGetRTUGroupNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRTUGroupNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetRTUGroupNameDelegate, new object[] {
                        DSGuid,
                        RtuGuid,
                        GroupGuid}, this.onEndGetRTUGroupNameDelegate, this.onGetRTUGroupNameCompletedDelegate, userState);
        }
        
        public string GetSubGroupGUIDsInGroup(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            return base.Channel.GetSubGroupGUIDsInGroup(DSGuid, RtuGuid, GroupGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSubGroupGUIDsInGroup(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubGroupGUIDsInGroup(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetSubGroupGUIDsInGroup(System.IAsyncResult result) {
            return base.Channel.EndGetSubGroupGUIDsInGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetSubGroupGUIDsInGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            uint GroupGuid = ((uint)(inValues[2]));
            return this.BeginGetSubGroupGUIDsInGroup(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        private object[] OnEndGetSubGroupGUIDsInGroup(System.IAsyncResult result) {
            string retVal = this.EndGetSubGroupGUIDsInGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubGroupGUIDsInGroupCompleted(object state) {
            if ((this.GetSubGroupGUIDsInGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubGroupGUIDsInGroupCompleted(this, new GetSubGroupGUIDsInGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubGroupGUIDsInGroupAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            this.GetSubGroupGUIDsInGroupAsync(DSGuid, RtuGuid, GroupGuid, null);
        }
        
        public void GetSubGroupGUIDsInGroupAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, object userState) {
            if ((this.onBeginGetSubGroupGUIDsInGroupDelegate == null)) {
                this.onBeginGetSubGroupGUIDsInGroupDelegate = new BeginOperationDelegate(this.OnBeginGetSubGroupGUIDsInGroup);
            }
            if ((this.onEndGetSubGroupGUIDsInGroupDelegate == null)) {
                this.onEndGetSubGroupGUIDsInGroupDelegate = new EndOperationDelegate(this.OnEndGetSubGroupGUIDsInGroup);
            }
            if ((this.onGetSubGroupGUIDsInGroupCompletedDelegate == null)) {
                this.onGetSubGroupGUIDsInGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubGroupGUIDsInGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubGroupGUIDsInGroupDelegate, new object[] {
                        DSGuid,
                        RtuGuid,
                        GroupGuid}, this.onEndGetSubGroupGUIDsInGroupDelegate, this.onGetSubGroupGUIDsInGroupCompletedDelegate, userState);
        }
        
        public string GetRtuGroupTagGUIDs(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            return base.Channel.GetRtuGroupTagGUIDs(DSGuid, RtuGuid, GroupGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRtuGroupTagGUIDs(ushort DSGuid, uint RtuGuid, uint GroupGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRtuGroupTagGUIDs(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRtuGroupTagGUIDs(System.IAsyncResult result) {
            return base.Channel.EndGetRtuGroupTagGUIDs(result);
        }
        
        private System.IAsyncResult OnBeginGetRtuGroupTagGUIDs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            uint GroupGuid = ((uint)(inValues[2]));
            return this.BeginGetRtuGroupTagGUIDs(DSGuid, RtuGuid, GroupGuid, callback, asyncState);
        }
        
        private object[] OnEndGetRtuGroupTagGUIDs(System.IAsyncResult result) {
            string retVal = this.EndGetRtuGroupTagGUIDs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRtuGroupTagGUIDsCompleted(object state) {
            if ((this.GetRtuGroupTagGUIDsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRtuGroupTagGUIDsCompleted(this, new GetRtuGroupTagGUIDsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRtuGroupTagGUIDsAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid) {
            this.GetRtuGroupTagGUIDsAsync(DSGuid, RtuGuid, GroupGuid, null);
        }
        
        public void GetRtuGroupTagGUIDsAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, object userState) {
            if ((this.onBeginGetRtuGroupTagGUIDsDelegate == null)) {
                this.onBeginGetRtuGroupTagGUIDsDelegate = new BeginOperationDelegate(this.OnBeginGetRtuGroupTagGUIDs);
            }
            if ((this.onEndGetRtuGroupTagGUIDsDelegate == null)) {
                this.onEndGetRtuGroupTagGUIDsDelegate = new EndOperationDelegate(this.OnEndGetRtuGroupTagGUIDs);
            }
            if ((this.onGetRtuGroupTagGUIDsCompletedDelegate == null)) {
                this.onGetRtuGroupTagGUIDsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRtuGroupTagGUIDsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRtuGroupTagGUIDsDelegate, new object[] {
                        DSGuid,
                        RtuGuid,
                        GroupGuid}, this.onEndGetRtuGroupTagGUIDsDelegate, this.onGetRtuGroupTagGUIDsCompletedDelegate, userState);
        }
        
        public string GetRTUTagName(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID) {
            return base.Channel.GetRTUTagName(DSGuid, RtuGuid, GroupGuid, TagGUID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRTUTagName(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRTUTagName(DSGuid, RtuGuid, GroupGuid, TagGUID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetRTUTagName(System.IAsyncResult result) {
            return base.Channel.EndGetRTUTagName(result);
        }
        
        private System.IAsyncResult OnBeginGetRTUTagName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            uint RtuGuid = ((uint)(inValues[1]));
            uint GroupGuid = ((uint)(inValues[2]));
            uint TagGUID = ((uint)(inValues[3]));
            return this.BeginGetRTUTagName(DSGuid, RtuGuid, GroupGuid, TagGUID, callback, asyncState);
        }
        
        private object[] OnEndGetRTUTagName(System.IAsyncResult result) {
            string retVal = this.EndGetRTUTagName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRTUTagNameCompleted(object state) {
            if ((this.GetRTUTagNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRTUTagNameCompleted(this, new GetRTUTagNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRTUTagNameAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID) {
            this.GetRTUTagNameAsync(DSGuid, RtuGuid, GroupGuid, TagGUID, null);
        }
        
        public void GetRTUTagNameAsync(ushort DSGuid, uint RtuGuid, uint GroupGuid, uint TagGUID, object userState) {
            if ((this.onBeginGetRTUTagNameDelegate == null)) {
                this.onBeginGetRTUTagNameDelegate = new BeginOperationDelegate(this.OnBeginGetRTUTagName);
            }
            if ((this.onEndGetRTUTagNameDelegate == null)) {
                this.onEndGetRTUTagNameDelegate = new EndOperationDelegate(this.OnEndGetRTUTagName);
            }
            if ((this.onGetRTUTagNameCompletedDelegate == null)) {
                this.onGetRTUTagNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRTUTagNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetRTUTagNameDelegate, new object[] {
                        DSGuid,
                        RtuGuid,
                        GroupGuid,
                        TagGUID}, this.onEndGetRTUTagNameDelegate, this.onGetRTUTagNameCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> GetTagsValue(string[] request) {
            return base.Channel.GetTagsValue(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagsValue(string[] request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagsValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> EndGetTagsValue(System.IAsyncResult result) {
            return base.Channel.EndGetTagsValue(result);
        }
        
        private System.IAsyncResult OnBeginGetTagsValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] request = ((string[])(inValues[0]));
            return this.BeginGetTagsValue(request, callback, asyncState);
        }
        
        private object[] OnEndGetTagsValue(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> retVal = this.EndGetTagsValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagsValueCompleted(object state) {
            if ((this.GetTagsValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagsValueCompleted(this, new GetTagsValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagsValueAsync(string[] request) {
            this.GetTagsValueAsync(request, null);
        }
        
        public void GetTagsValueAsync(string[] request, object userState) {
            if ((this.onBeginGetTagsValueDelegate == null)) {
                this.onBeginGetTagsValueDelegate = new BeginOperationDelegate(this.OnBeginGetTagsValue);
            }
            if ((this.onEndGetTagsValueDelegate == null)) {
                this.onEndGetTagsValueDelegate = new EndOperationDelegate(this.OnEndGetTagsValue);
            }
            if ((this.onGetTagsValueCompletedDelegate == null)) {
                this.onGetTagsValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagsValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagsValueDelegate, new object[] {
                        request}, this.onEndGetTagsValueDelegate, this.onGetTagsValueCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> GetTagsValuesUpdated() {
            return base.Channel.GetTagsValuesUpdated();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTagsValuesUpdated(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTagsValuesUpdated(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> EndGetTagsValuesUpdated(System.IAsyncResult result) {
            return base.Channel.EndGetTagsValuesUpdated(result);
        }
        
        private System.IAsyncResult OnBeginGetTagsValuesUpdated(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetTagsValuesUpdated(callback, asyncState);
        }
        
        private object[] OnEndGetTagsValuesUpdated(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, ProviderCustomerExchangeLib.DSRouterService.DSTagValue> retVal = this.EndGetTagsValuesUpdated(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTagsValuesUpdatedCompleted(object state) {
            if ((this.GetTagsValuesUpdatedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTagsValuesUpdatedCompleted(this, new GetTagsValuesUpdatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTagsValuesUpdatedAsync() {
            this.GetTagsValuesUpdatedAsync(null);
        }
        
        public void GetTagsValuesUpdatedAsync(object userState) {
            if ((this.onBeginGetTagsValuesUpdatedDelegate == null)) {
                this.onBeginGetTagsValuesUpdatedDelegate = new BeginOperationDelegate(this.OnBeginGetTagsValuesUpdated);
            }
            if ((this.onEndGetTagsValuesUpdatedDelegate == null)) {
                this.onEndGetTagsValuesUpdatedDelegate = new EndOperationDelegate(this.OnEndGetTagsValuesUpdated);
            }
            if ((this.onGetTagsValuesUpdatedCompletedDelegate == null)) {
                this.onGetTagsValuesUpdatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTagsValuesUpdatedCompleted);
            }
            base.InvokeAsync(this.onBeginGetTagsValuesUpdatedDelegate, null, this.onEndGetTagsValuesUpdatedDelegate, this.onGetTagsValuesUpdatedCompletedDelegate, userState);
        }
        
        public void SubscribeRTUTags(string[] request) {
            base.Channel.SubscribeRTUTags(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubscribeRTUTags(string[] request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubscribeRTUTags(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubscribeRTUTags(System.IAsyncResult result) {
            base.Channel.EndSubscribeRTUTags(result);
        }
        
        private System.IAsyncResult OnBeginSubscribeRTUTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] request = ((string[])(inValues[0]));
            return this.BeginSubscribeRTUTags(request, callback, asyncState);
        }
        
        private object[] OnEndSubscribeRTUTags(System.IAsyncResult result) {
            this.EndSubscribeRTUTags(result);
            return null;
        }
        
        private void OnSubscribeRTUTagsCompleted(object state) {
            if ((this.SubscribeRTUTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubscribeRTUTagsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubscribeRTUTagsAsync(string[] request) {
            this.SubscribeRTUTagsAsync(request, null);
        }
        
        public void SubscribeRTUTagsAsync(string[] request, object userState) {
            if ((this.onBeginSubscribeRTUTagsDelegate == null)) {
                this.onBeginSubscribeRTUTagsDelegate = new BeginOperationDelegate(this.OnBeginSubscribeRTUTags);
            }
            if ((this.onEndSubscribeRTUTagsDelegate == null)) {
                this.onEndSubscribeRTUTagsDelegate = new EndOperationDelegate(this.OnEndSubscribeRTUTags);
            }
            if ((this.onSubscribeRTUTagsCompletedDelegate == null)) {
                this.onSubscribeRTUTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubscribeRTUTagsCompleted);
            }
            base.InvokeAsync(this.onBeginSubscribeRTUTagsDelegate, new object[] {
                        request}, this.onEndSubscribeRTUTagsDelegate, this.onSubscribeRTUTagsCompletedDelegate, userState);
        }
        
        public void UnscribeRTUTags(string[] request) {
            base.Channel.UnscribeRTUTags(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnscribeRTUTags(string[] request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnscribeRTUTags(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUnscribeRTUTags(System.IAsyncResult result) {
            base.Channel.EndUnscribeRTUTags(result);
        }
        
        private System.IAsyncResult OnBeginUnscribeRTUTags(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] request = ((string[])(inValues[0]));
            return this.BeginUnscribeRTUTags(request, callback, asyncState);
        }
        
        private object[] OnEndUnscribeRTUTags(System.IAsyncResult result) {
            this.EndUnscribeRTUTags(result);
            return null;
        }
        
        private void OnUnscribeRTUTagsCompleted(object state) {
            if ((this.UnscribeRTUTagsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnscribeRTUTagsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnscribeRTUTagsAsync(string[] request) {
            this.UnscribeRTUTagsAsync(request, null);
        }
        
        public void UnscribeRTUTagsAsync(string[] request, object userState) {
            if ((this.onBeginUnscribeRTUTagsDelegate == null)) {
                this.onBeginUnscribeRTUTagsDelegate = new BeginOperationDelegate(this.OnBeginUnscribeRTUTags);
            }
            if ((this.onEndUnscribeRTUTagsDelegate == null)) {
                this.onEndUnscribeRTUTagsDelegate = new EndOperationDelegate(this.OnEndUnscribeRTUTags);
            }
            if ((this.onUnscribeRTUTagsCompletedDelegate == null)) {
                this.onUnscribeRTUTagsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnscribeRTUTagsCompleted);
            }
            base.InvokeAsync(this.onBeginUnscribeRTUTagsDelegate, new object[] {
                        request}, this.onEndUnscribeRTUTagsDelegate, this.onUnscribeRTUTagsCompletedDelegate, userState);
        }
        
        public ProviderCustomerExchangeLib.DSRouterService.LstError GetDSLastErrorsGUID(ushort DSGuid) {
            return base.Channel.GetDSLastErrorsGUID(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSLastErrorsGUID(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSLastErrorsGUID(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ProviderCustomerExchangeLib.DSRouterService.LstError EndGetDSLastErrorsGUID(System.IAsyncResult result) {
            return base.Channel.EndGetDSLastErrorsGUID(result);
        }
        
        private System.IAsyncResult OnBeginGetDSLastErrorsGUID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetDSLastErrorsGUID(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetDSLastErrorsGUID(System.IAsyncResult result) {
            ProviderCustomerExchangeLib.DSRouterService.LstError retVal = this.EndGetDSLastErrorsGUID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSLastErrorsGUIDCompleted(object state) {
            if ((this.GetDSLastErrorsGUIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSLastErrorsGUIDCompleted(this, new GetDSLastErrorsGUIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSLastErrorsGUIDAsync(ushort DSGuid) {
            this.GetDSLastErrorsGUIDAsync(DSGuid, null);
        }
        
        public void GetDSLastErrorsGUIDAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetDSLastErrorsGUIDDelegate == null)) {
                this.onBeginGetDSLastErrorsGUIDDelegate = new BeginOperationDelegate(this.OnBeginGetDSLastErrorsGUID);
            }
            if ((this.onEndGetDSLastErrorsGUIDDelegate == null)) {
                this.onEndGetDSLastErrorsGUIDDelegate = new EndOperationDelegate(this.OnEndGetDSLastErrorsGUID);
            }
            if ((this.onGetDSLastErrorsGUIDCompletedDelegate == null)) {
                this.onGetDSLastErrorsGUIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSLastErrorsGUIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSLastErrorsGUIDDelegate, new object[] {
                        DSGuid}, this.onEndGetDSLastErrorsGUIDDelegate, this.onGetDSLastErrorsGUIDCompletedDelegate, userState);
        }
        
        public string GetDSLastErrorGUID(ushort DSGuid) {
            return base.Channel.GetDSLastErrorGUID(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSLastErrorGUID(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSLastErrorGUID(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDSLastErrorGUID(System.IAsyncResult result) {
            return base.Channel.EndGetDSLastErrorGUID(result);
        }
        
        private System.IAsyncResult OnBeginGetDSLastErrorGUID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginGetDSLastErrorGUID(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndGetDSLastErrorGUID(System.IAsyncResult result) {
            string retVal = this.EndGetDSLastErrorGUID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSLastErrorGUIDCompleted(object state) {
            if ((this.GetDSLastErrorGUIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSLastErrorGUIDCompleted(this, new GetDSLastErrorGUIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSLastErrorGUIDAsync(ushort DSGuid) {
            this.GetDSLastErrorGUIDAsync(DSGuid, null);
        }
        
        public void GetDSLastErrorGUIDAsync(ushort DSGuid, object userState) {
            if ((this.onBeginGetDSLastErrorGUIDDelegate == null)) {
                this.onBeginGetDSLastErrorGUIDDelegate = new BeginOperationDelegate(this.OnBeginGetDSLastErrorGUID);
            }
            if ((this.onEndGetDSLastErrorGUIDDelegate == null)) {
                this.onEndGetDSLastErrorGUIDDelegate = new EndOperationDelegate(this.OnEndGetDSLastErrorGUID);
            }
            if ((this.onGetDSLastErrorGUIDCompletedDelegate == null)) {
                this.onGetDSLastErrorGUIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSLastErrorGUIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSLastErrorGUIDDelegate, new object[] {
                        DSGuid}, this.onEndGetDSLastErrorGUIDDelegate, this.onGetDSLastErrorGUIDCompletedDelegate, userState);
        }
        
        public string GetDSErrorTextByErrorGUID(ushort DSGuid, string errorGUID) {
            return base.Channel.GetDSErrorTextByErrorGUID(DSGuid, errorGUID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDSErrorTextByErrorGUID(ushort DSGuid, string errorGUID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDSErrorTextByErrorGUID(DSGuid, errorGUID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDSErrorTextByErrorGUID(System.IAsyncResult result) {
            return base.Channel.EndGetDSErrorTextByErrorGUID(result);
        }
        
        private System.IAsyncResult OnBeginGetDSErrorTextByErrorGUID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            string errorGUID = ((string)(inValues[1]));
            return this.BeginGetDSErrorTextByErrorGUID(DSGuid, errorGUID, callback, asyncState);
        }
        
        private object[] OnEndGetDSErrorTextByErrorGUID(System.IAsyncResult result) {
            string retVal = this.EndGetDSErrorTextByErrorGUID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDSErrorTextByErrorGUIDCompleted(object state) {
            if ((this.GetDSErrorTextByErrorGUIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDSErrorTextByErrorGUIDCompleted(this, new GetDSErrorTextByErrorGUIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDSErrorTextByErrorGUIDAsync(ushort DSGuid, string errorGUID) {
            this.GetDSErrorTextByErrorGUIDAsync(DSGuid, errorGUID, null);
        }
        
        public void GetDSErrorTextByErrorGUIDAsync(ushort DSGuid, string errorGUID, object userState) {
            if ((this.onBeginGetDSErrorTextByErrorGUIDDelegate == null)) {
                this.onBeginGetDSErrorTextByErrorGUIDDelegate = new BeginOperationDelegate(this.OnBeginGetDSErrorTextByErrorGUID);
            }
            if ((this.onEndGetDSErrorTextByErrorGUIDDelegate == null)) {
                this.onEndGetDSErrorTextByErrorGUIDDelegate = new EndOperationDelegate(this.OnEndGetDSErrorTextByErrorGUID);
            }
            if ((this.onGetDSErrorTextByErrorGUIDCompletedDelegate == null)) {
                this.onGetDSErrorTextByErrorGUIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDSErrorTextByErrorGUIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetDSErrorTextByErrorGUIDDelegate, new object[] {
                        DSGuid,
                        errorGUID}, this.onEndGetDSErrorTextByErrorGUIDDelegate, this.onGetDSErrorTextByErrorGUIDCompletedDelegate, userState);
        }
        
        public void AcknowledgementOfErrors(ushort DSGuid) {
            base.Channel.AcknowledgementOfErrors(DSGuid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcknowledgementOfErrors(ushort DSGuid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcknowledgementOfErrors(DSGuid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAcknowledgementOfErrors(System.IAsyncResult result) {
            base.Channel.EndAcknowledgementOfErrors(result);
        }
        
        private System.IAsyncResult OnBeginAcknowledgementOfErrors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ushort DSGuid = ((ushort)(inValues[0]));
            return this.BeginAcknowledgementOfErrors(DSGuid, callback, asyncState);
        }
        
        private object[] OnEndAcknowledgementOfErrors(System.IAsyncResult result) {
            this.EndAcknowledgementOfErrors(result);
            return null;
        }
        
        private void OnAcknowledgementOfErrorsCompleted(object state) {
            if ((this.AcknowledgementOfErrorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcknowledgementOfErrorsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcknowledgementOfErrorsAsync(ushort DSGuid) {
            this.AcknowledgementOfErrorsAsync(DSGuid, null);
        }
        
        public void AcknowledgementOfErrorsAsync(ushort DSGuid, object userState) {
            if ((this.onBeginAcknowledgementOfErrorsDelegate == null)) {
                this.onBeginAcknowledgementOfErrorsDelegate = new BeginOperationDelegate(this.OnBeginAcknowledgementOfErrors);
            }
            if ((this.onEndAcknowledgementOfErrorsDelegate == null)) {
                this.onEndAcknowledgementOfErrorsDelegate = new EndOperationDelegate(this.OnEndAcknowledgementOfErrors);
            }
            if ((this.onAcknowledgementOfErrorsCompletedDelegate == null)) {
                this.onAcknowledgementOfErrorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcknowledgementOfErrorsCompleted);
            }
            base.InvokeAsync(this.onBeginAcknowledgementOfErrorsDelegate, new object[] {
                        DSGuid}, this.onEndAcknowledgementOfErrorsDelegate, this.onAcknowledgementOfErrorsCompletedDelegate, userState);
        }
        
        public void RegisterForErrorEvent(string keyticker) {
            base.Channel.RegisterForErrorEvent(keyticker);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterForErrorEvent(string keyticker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterForErrorEvent(keyticker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRegisterForErrorEvent(System.IAsyncResult result) {
            base.Channel.EndRegisterForErrorEvent(result);
        }
        
        private System.IAsyncResult OnBeginRegisterForErrorEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string keyticker = ((string)(inValues[0]));
            return this.BeginRegisterForErrorEvent(keyticker, callback, asyncState);
        }
        
        private object[] OnEndRegisterForErrorEvent(System.IAsyncResult result) {
            this.EndRegisterForErrorEvent(result);
            return null;
        }
        
        private void OnRegisterForErrorEventCompleted(object state) {
            if ((this.RegisterForErrorEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterForErrorEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterForErrorEventAsync(string keyticker) {
            this.RegisterForErrorEventAsync(keyticker, null);
        }
        
        public void RegisterForErrorEventAsync(string keyticker, object userState) {
            if ((this.onBeginRegisterForErrorEventDelegate == null)) {
                this.onBeginRegisterForErrorEventDelegate = new BeginOperationDelegate(this.OnBeginRegisterForErrorEvent);
            }
            if ((this.onEndRegisterForErrorEventDelegate == null)) {
                this.onEndRegisterForErrorEventDelegate = new EndOperationDelegate(this.OnEndRegisterForErrorEvent);
            }
            if ((this.onRegisterForErrorEventCompletedDelegate == null)) {
                this.onRegisterForErrorEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterForErrorEventCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterForErrorEventDelegate, new object[] {
                        keyticker}, this.onEndRegisterForErrorEventDelegate, this.onRegisterForErrorEventCompletedDelegate, userState);
        }
        
        public void Ping() {
            base.Channel.Ping();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPing(System.IAsyncResult result) {
            base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            this.EndPing(result);
            return null;
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
    }
}
