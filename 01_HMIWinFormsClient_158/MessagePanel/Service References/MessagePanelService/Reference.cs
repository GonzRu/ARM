//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessagePanel.MessagePanelService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableAutorization", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableAutorization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Access {
            get {
                return this.AccessField;
            }
            set {
                if ((this.AccessField.Equals(value) != true)) {
                    this.AccessField = value;
                    this.RaisePropertyChanged("Access");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Right {
            get {
                return this.RightField;
            }
            set {
                if ((object.ReferenceEquals(this.RightField, value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountRows", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL")]
    [System.SerializableAttribute()]
    public partial class CountRows : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FailureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UndefinedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WarningField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Failure {
            get {
                return this.FailureField;
            }
            set {
                if ((this.FailureField.Equals(value) != true)) {
                    this.FailureField = value;
                    this.RaisePropertyChanged("Failure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Info {
            get {
                return this.InfoField;
            }
            set {
                if ((this.InfoField.Equals(value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Undefined {
            get {
                return this.UndefinedField;
            }
            set {
                if ((this.UndefinedField.Equals(value) != true)) {
                    this.UndefinedField = value;
                    this.RaisePropertyChanged("Undefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Warning {
            get {
                return this.WarningField;
            }
            set {
                if ((this.WarningField.Equals(value) != true)) {
                    this.WarningField = value;
                    this.RaisePropertyChanged("Warning");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseCell", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableUnionLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.BlockCell))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableUsersLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableEventLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableEventLogAlarm))]
    public partial class BaseCell : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LocalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LocalTime {
            get {
                return this.LocalTimeField;
            }
            set {
                if ((this.LocalTimeField.Equals(value) != true)) {
                    this.LocalTimeField = value;
                    this.RaisePropertyChanged("LocalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableUnionLog", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableUnionLog : MessagePanel.MessagePanelService.BaseCell {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockCell", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableUsersLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableEventLog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MessagePanel.MessagePanelService.TableEventLogAlarm))]
    public partial class BlockCell : MessagePanel.MessagePanelService.BaseCell {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlockIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockID {
            get {
                return this.BlockIDField;
            }
            set {
                if ((this.BlockIDField.Equals(value) != true)) {
                    this.BlockIDField = value;
                    this.RaisePropertyChanged("BlockID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockName {
            get {
                return this.BlockNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockNameField, value) != true)) {
                    this.BlockNameField = value;
                    this.RaisePropertyChanged("BlockName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableUsersLog", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableUsersLog : MessagePanel.MessagePanelService.BlockCell {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArmNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArmName {
            get {
                return this.ArmNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArmNameField, value) != true)) {
                    this.ArmNameField = value;
                    this.RaisePropertyChanged("ArmName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServerTime {
            get {
                return this.ServerTimeField;
            }
            set {
                if ((this.ServerTimeField.Equals(value) != true)) {
                    this.ServerTimeField = value;
                    this.RaisePropertyChanged("ServerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableEventLog", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableEventLog : MessagePanel.MessagePanelService.BlockCell {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessagePanel.MessagePanelService.TableWhoReceipt TableReceiptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessagePanel.MessagePanelService.TableWhoReceipt TableReceipt {
            get {
                return this.TableReceiptField;
            }
            set {
                if ((object.ReferenceEquals(this.TableReceiptField, value) != true)) {
                    this.TableReceiptField = value;
                    this.RaisePropertyChanged("TableReceipt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableEventLogAlarm", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableEventLogAlarm : MessagePanel.MessagePanelService.BlockCell {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceiptCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessagePanel.MessagePanelService.CellType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalID {
            get {
                return this.AdditionalIDField;
            }
            set {
                if ((this.AdditionalIDField.Equals(value) != true)) {
                    this.AdditionalIDField = value;
                    this.RaisePropertyChanged("AdditionalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckStatus {
            get {
                return this.CheckStatusField;
            }
            set {
                if ((this.CheckStatusField.Equals(value) != true)) {
                    this.CheckStatusField = value;
                    this.RaisePropertyChanged("CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceiptComment {
            get {
                return this.ReceiptCommentField;
            }
            set {
                if ((this.ReceiptCommentField.Equals(value) != true)) {
                    this.ReceiptCommentField = value;
                    this.RaisePropertyChanged("ReceiptComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessagePanel.MessagePanelService.CellType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CellType", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    public enum CellType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableWhoReceipt", Namespace="http://schemas.datacontract.org/2004/07/WpfConnSQL.CellDatas")]
    [System.SerializableAttribute()]
    public partial class TableWhoReceipt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LocalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UserTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LocalTime {
            get {
                return this.LocalTimeField;
            }
            set {
                if ((this.LocalTimeField.Equals(value) != true)) {
                    this.LocalTimeField = value;
                    this.RaisePropertyChanged("LocalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogin {
            get {
                return this.UserLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginField, value) != true)) {
                    this.UserLoginField = value;
                    this.RaisePropertyChanged("UserLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UserTime {
            get {
                return this.UserTimeField;
            }
            set {
                if ((this.UserTimeField.Equals(value) != true)) {
                    this.UserTimeField = value;
                    this.RaisePropertyChanged("UserTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AsyncGeneralRequest", Namespace="http://schemas.datacontract.org/2004/07/NetworkLibrary")]
    [System.SerializableAttribute()]
    public partial class AsyncGeneralRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MessagePanel.MessagePanelService.TableEventLogAlarm[] TelaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MessagePanel.MessagePanelService.TableEventLogAlarm[] Tela {
            get {
                return this.TelaField;
            }
            set {
                if ((object.ReferenceEquals(this.TelaField, value) != true)) {
                    this.TelaField = value;
                    this.RaisePropertyChanged("Tela");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeCode {
            get {
                return this.TypeCodeField;
            }
            set {
                if ((this.TypeCodeField.Equals(value) != true)) {
                    this.TypeCodeField = value;
                    this.RaisePropertyChanged("TypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessagePanelService.IDataChannel")]
    public interface IDataChannel {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/Join")]
        void Join();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IClient/Join")]
        System.IAsyncResult BeginJoin(System.AsyncCallback callback, object asyncState);
        
        void EndJoin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IClient/Leave")]
        void Leave();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IClient/Leave")]
        System.IAsyncResult BeginLeave(System.AsyncCallback callback, object asyncState);
        
        void EndLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataChannel/Autarization", ReplyAction="http://tempuri.org/IDataChannel/AutarizationResponse")]
        MessagePanel.MessagePanelService.TableAutorization Autarization(string _login, string _password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataChannel/Autarization", ReplyAction="http://tempuri.org/IDataChannel/AutarizationResponse")]
        System.IAsyncResult BeginAutarization(string _login, string _password, System.AsyncCallback callback, object asyncState);
        
        MessagePanel.MessagePanelService.TableAutorization EndAutarization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataChannel/NeedUpDate", ReplyAction="http://tempuri.org/IDataChannel/NeedUpDateResponse")]
        bool NeedUpDate(int _number);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataChannel/NeedUpDate", ReplyAction="http://tempuri.org/IDataChannel/NeedUpDateResponse")]
        System.IAsyncResult BeginNeedUpDate(int _number, System.AsyncCallback callback, object asyncState);
        
        bool EndNeedUpDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataChannel/CountRowsData", ReplyAction="http://tempuri.org/IDataChannel/CountRowsDataResponse")]
        MessagePanel.MessagePanelService.CountRows CountRowsData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataChannel/CountRowsData", ReplyAction="http://tempuri.org/IDataChannel/CountRowsDataResponse")]
        System.IAsyncResult BeginCountRowsData(System.AsyncCallback callback, object asyncState);
        
        MessagePanel.MessagePanelService.CountRows EndCountRowsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataChannel/Kvoting", ReplyAction="http://tempuri.org/IDataChannel/KvotingResponse")]
        bool Kvoting(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDataChannel/Kvoting", ReplyAction="http://tempuri.org/IDataChannel/KvotingResponse")]
        System.IAsyncResult BeginKvoting(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type, System.AsyncCallback callback, object asyncState);
        
        bool EndKvoting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetAllKvoting", ReplyAction="ReplySetAllKvoting")]
        bool AllKvoting(string _comment, int _userID, int _number_of_type);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetAllKvoting", ReplyAction="ReplySetAllKvoting")]
        System.IAsyncResult BeginAllKvoting(string _comment, int _userID, int _number_of_type, System.AsyncCallback callback, object asyncState);
        
        bool EndAllKvoting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetKvotingEventTime", ReplyAction="ReplySetKvotingEventTime")]
        bool KvotingEventTime(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetKvotingEventTime", ReplyAction="ReplySetKvotingEventTime")]
        System.IAsyncResult BeginKvotingEventTime(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate, System.AsyncCallback callback, object asyncState);
        
        bool EndKvotingEventTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetKvotingEventDevice", ReplyAction="ReplySetKvotingEventDevice")]
        bool KvotingEventDevice(string _comment, int _userID, int _number_of_type, int _device_id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetKvotingEventDevice", ReplyAction="ReplySetKvotingEventDevice")]
        System.IAsyncResult BeginKvotingEventDevice(string _comment, int _userID, int _number_of_type, int _device_id, System.AsyncCallback callback, object asyncState);
        
        bool EndKvotingEventDevice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="EventLogAlarm", ReplyAction="ReplyEventLogAlarm")]
        MessagePanel.MessagePanelService.AsyncGeneralRequest GetEventLogAlarm(int _count, int _userID, int _type_code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="EventLogAlarm", ReplyAction="ReplyEventLogAlarm")]
        System.IAsyncResult BeginGetEventLogAlarm(int _count, int _userID, int _type_code, System.AsyncCallback callback, object asyncState);
        
        MessagePanel.MessagePanelService.AsyncGeneralRequest EndGetEventLogAlarm(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataChannelChannel : MessagePanel.MessagePanelService.IDataChannel, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutarizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AutarizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MessagePanel.MessagePanelService.TableAutorization Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MessagePanel.MessagePanelService.TableAutorization)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NeedUpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NeedUpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountRowsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CountRowsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MessagePanel.MessagePanelService.CountRows Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MessagePanel.MessagePanelService.CountRows)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KvotingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KvotingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllKvotingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllKvotingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KvotingEventTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KvotingEventTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KvotingEventDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KvotingEventDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventLogAlarmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventLogAlarmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MessagePanel.MessagePanelService.AsyncGeneralRequest Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MessagePanel.MessagePanelService.AsyncGeneralRequest)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataChannelClient : System.ServiceModel.ClientBase<MessagePanel.MessagePanelService.IDataChannel>, MessagePanel.MessagePanelService.IDataChannel {
        
        private BeginOperationDelegate onBeginJoinDelegate;
        
        private EndOperationDelegate onEndJoinDelegate;
        
        private System.Threading.SendOrPostCallback onJoinCompletedDelegate;
        
        private BeginOperationDelegate onBeginLeaveDelegate;
        
        private EndOperationDelegate onEndLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginAutarizationDelegate;
        
        private EndOperationDelegate onEndAutarizationDelegate;
        
        private System.Threading.SendOrPostCallback onAutarizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginNeedUpDateDelegate;
        
        private EndOperationDelegate onEndNeedUpDateDelegate;
        
        private System.Threading.SendOrPostCallback onNeedUpDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCountRowsDataDelegate;
        
        private EndOperationDelegate onEndCountRowsDataDelegate;
        
        private System.Threading.SendOrPostCallback onCountRowsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginKvotingDelegate;
        
        private EndOperationDelegate onEndKvotingDelegate;
        
        private System.Threading.SendOrPostCallback onKvotingCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllKvotingDelegate;
        
        private EndOperationDelegate onEndAllKvotingDelegate;
        
        private System.Threading.SendOrPostCallback onAllKvotingCompletedDelegate;
        
        private BeginOperationDelegate onBeginKvotingEventTimeDelegate;
        
        private EndOperationDelegate onEndKvotingEventTimeDelegate;
        
        private System.Threading.SendOrPostCallback onKvotingEventTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginKvotingEventDeviceDelegate;
        
        private EndOperationDelegate onEndKvotingEventDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onKvotingEventDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEventLogAlarmDelegate;
        
        private EndOperationDelegate onEndGetEventLogAlarmDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventLogAlarmCompletedDelegate;
        
        public DataChannelClient() {
        }
        
        public DataChannelClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataChannelClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataChannelClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataChannelClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> JoinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LeaveCompleted;
        
        public event System.EventHandler<AutarizationCompletedEventArgs> AutarizationCompleted;
        
        public event System.EventHandler<NeedUpDateCompletedEventArgs> NeedUpDateCompleted;
        
        public event System.EventHandler<CountRowsDataCompletedEventArgs> CountRowsDataCompleted;
        
        public event System.EventHandler<KvotingCompletedEventArgs> KvotingCompleted;
        
        public event System.EventHandler<AllKvotingCompletedEventArgs> AllKvotingCompleted;
        
        public event System.EventHandler<KvotingEventTimeCompletedEventArgs> KvotingEventTimeCompleted;
        
        public event System.EventHandler<KvotingEventDeviceCompletedEventArgs> KvotingEventDeviceCompleted;
        
        public event System.EventHandler<GetEventLogAlarmCompletedEventArgs> GetEventLogAlarmCompleted;
        
        public void Join() {
            base.Channel.Join();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginJoin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJoin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndJoin(System.IAsyncResult result) {
            base.Channel.EndJoin(result);
        }
        
        private System.IAsyncResult OnBeginJoin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginJoin(callback, asyncState);
        }
        
        private object[] OnEndJoin(System.IAsyncResult result) {
            this.EndJoin(result);
            return null;
        }
        
        private void OnJoinCompleted(object state) {
            if ((this.JoinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JoinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JoinAsync() {
            this.JoinAsync(null);
        }
        
        public void JoinAsync(object userState) {
            if ((this.onBeginJoinDelegate == null)) {
                this.onBeginJoinDelegate = new BeginOperationDelegate(this.OnBeginJoin);
            }
            if ((this.onEndJoinDelegate == null)) {
                this.onEndJoinDelegate = new EndOperationDelegate(this.OnEndJoin);
            }
            if ((this.onJoinCompletedDelegate == null)) {
                this.onJoinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJoinCompleted);
            }
            base.InvokeAsync(this.onBeginJoinDelegate, null, this.onEndJoinDelegate, this.onJoinCompletedDelegate, userState);
        }
        
        public void Leave() {
            base.Channel.Leave();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLeave(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLeave(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLeave(System.IAsyncResult result) {
            base.Channel.EndLeave(result);
        }
        
        private System.IAsyncResult OnBeginLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLeave(callback, asyncState);
        }
        
        private object[] OnEndLeave(System.IAsyncResult result) {
            this.EndLeave(result);
            return null;
        }
        
        private void OnLeaveCompleted(object state) {
            if ((this.LeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LeaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LeaveAsync() {
            this.LeaveAsync(null);
        }
        
        public void LeaveAsync(object userState) {
            if ((this.onBeginLeaveDelegate == null)) {
                this.onBeginLeaveDelegate = new BeginOperationDelegate(this.OnBeginLeave);
            }
            if ((this.onEndLeaveDelegate == null)) {
                this.onEndLeaveDelegate = new EndOperationDelegate(this.OnEndLeave);
            }
            if ((this.onLeaveCompletedDelegate == null)) {
                this.onLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginLeaveDelegate, null, this.onEndLeaveDelegate, this.onLeaveCompletedDelegate, userState);
        }
        
        public MessagePanel.MessagePanelService.TableAutorization Autarization(string _login, string _password) {
            return base.Channel.Autarization(_login, _password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAutarization(string _login, string _password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAutarization(_login, _password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MessagePanel.MessagePanelService.TableAutorization EndAutarization(System.IAsyncResult result) {
            return base.Channel.EndAutarization(result);
        }
        
        private System.IAsyncResult OnBeginAutarization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _login = ((string)(inValues[0]));
            string _password = ((string)(inValues[1]));
            return this.BeginAutarization(_login, _password, callback, asyncState);
        }
        
        private object[] OnEndAutarization(System.IAsyncResult result) {
            MessagePanel.MessagePanelService.TableAutorization retVal = this.EndAutarization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAutarizationCompleted(object state) {
            if ((this.AutarizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AutarizationCompleted(this, new AutarizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AutarizationAsync(string _login, string _password) {
            this.AutarizationAsync(_login, _password, null);
        }
        
        public void AutarizationAsync(string _login, string _password, object userState) {
            if ((this.onBeginAutarizationDelegate == null)) {
                this.onBeginAutarizationDelegate = new BeginOperationDelegate(this.OnBeginAutarization);
            }
            if ((this.onEndAutarizationDelegate == null)) {
                this.onEndAutarizationDelegate = new EndOperationDelegate(this.OnEndAutarization);
            }
            if ((this.onAutarizationCompletedDelegate == null)) {
                this.onAutarizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAutarizationCompleted);
            }
            base.InvokeAsync(this.onBeginAutarizationDelegate, new object[] {
                        _login,
                        _password}, this.onEndAutarizationDelegate, this.onAutarizationCompletedDelegate, userState);
        }
        
        public bool NeedUpDate(int _number) {
            return base.Channel.NeedUpDate(_number);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNeedUpDate(int _number, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNeedUpDate(_number, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndNeedUpDate(System.IAsyncResult result) {
            return base.Channel.EndNeedUpDate(result);
        }
        
        private System.IAsyncResult OnBeginNeedUpDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int _number = ((int)(inValues[0]));
            return this.BeginNeedUpDate(_number, callback, asyncState);
        }
        
        private object[] OnEndNeedUpDate(System.IAsyncResult result) {
            bool retVal = this.EndNeedUpDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNeedUpDateCompleted(object state) {
            if ((this.NeedUpDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NeedUpDateCompleted(this, new NeedUpDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NeedUpDateAsync(int _number) {
            this.NeedUpDateAsync(_number, null);
        }
        
        public void NeedUpDateAsync(int _number, object userState) {
            if ((this.onBeginNeedUpDateDelegate == null)) {
                this.onBeginNeedUpDateDelegate = new BeginOperationDelegate(this.OnBeginNeedUpDate);
            }
            if ((this.onEndNeedUpDateDelegate == null)) {
                this.onEndNeedUpDateDelegate = new EndOperationDelegate(this.OnEndNeedUpDate);
            }
            if ((this.onNeedUpDateCompletedDelegate == null)) {
                this.onNeedUpDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNeedUpDateCompleted);
            }
            base.InvokeAsync(this.onBeginNeedUpDateDelegate, new object[] {
                        _number}, this.onEndNeedUpDateDelegate, this.onNeedUpDateCompletedDelegate, userState);
        }
        
        public MessagePanel.MessagePanelService.CountRows CountRowsData() {
            return base.Channel.CountRowsData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCountRowsData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCountRowsData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MessagePanel.MessagePanelService.CountRows EndCountRowsData(System.IAsyncResult result) {
            return base.Channel.EndCountRowsData(result);
        }
        
        private System.IAsyncResult OnBeginCountRowsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCountRowsData(callback, asyncState);
        }
        
        private object[] OnEndCountRowsData(System.IAsyncResult result) {
            MessagePanel.MessagePanelService.CountRows retVal = this.EndCountRowsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCountRowsDataCompleted(object state) {
            if ((this.CountRowsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CountRowsDataCompleted(this, new CountRowsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CountRowsDataAsync() {
            this.CountRowsDataAsync(null);
        }
        
        public void CountRowsDataAsync(object userState) {
            if ((this.onBeginCountRowsDataDelegate == null)) {
                this.onBeginCountRowsDataDelegate = new BeginOperationDelegate(this.OnBeginCountRowsData);
            }
            if ((this.onEndCountRowsDataDelegate == null)) {
                this.onEndCountRowsDataDelegate = new EndOperationDelegate(this.OnEndCountRowsData);
            }
            if ((this.onCountRowsDataCompletedDelegate == null)) {
                this.onCountRowsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCountRowsDataCompleted);
            }
            base.InvokeAsync(this.onBeginCountRowsDataDelegate, null, this.onEndCountRowsDataDelegate, this.onCountRowsDataCompletedDelegate, userState);
        }
        
        public bool Kvoting(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type) {
            return base.Channel.Kvoting(_tela, _comment, _userID, _number_of_type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginKvoting(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKvoting(_tela, _comment, _userID, _number_of_type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndKvoting(System.IAsyncResult result) {
            return base.Channel.EndKvoting(result);
        }
        
        private System.IAsyncResult OnBeginKvoting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MessagePanel.MessagePanelService.TableEventLogAlarm _tela = ((MessagePanel.MessagePanelService.TableEventLogAlarm)(inValues[0]));
            string _comment = ((string)(inValues[1]));
            int _userID = ((int)(inValues[2]));
            int _number_of_type = ((int)(inValues[3]));
            return this.BeginKvoting(_tela, _comment, _userID, _number_of_type, callback, asyncState);
        }
        
        private object[] OnEndKvoting(System.IAsyncResult result) {
            bool retVal = this.EndKvoting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKvotingCompleted(object state) {
            if ((this.KvotingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KvotingCompleted(this, new KvotingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KvotingAsync(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type) {
            this.KvotingAsync(_tela, _comment, _userID, _number_of_type, null);
        }
        
        public void KvotingAsync(MessagePanel.MessagePanelService.TableEventLogAlarm _tela, string _comment, int _userID, int _number_of_type, object userState) {
            if ((this.onBeginKvotingDelegate == null)) {
                this.onBeginKvotingDelegate = new BeginOperationDelegate(this.OnBeginKvoting);
            }
            if ((this.onEndKvotingDelegate == null)) {
                this.onEndKvotingDelegate = new EndOperationDelegate(this.OnEndKvoting);
            }
            if ((this.onKvotingCompletedDelegate == null)) {
                this.onKvotingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKvotingCompleted);
            }
            base.InvokeAsync(this.onBeginKvotingDelegate, new object[] {
                        _tela,
                        _comment,
                        _userID,
                        _number_of_type}, this.onEndKvotingDelegate, this.onKvotingCompletedDelegate, userState);
        }
        
        public bool AllKvoting(string _comment, int _userID, int _number_of_type) {
            return base.Channel.AllKvoting(_comment, _userID, _number_of_type);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllKvoting(string _comment, int _userID, int _number_of_type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllKvoting(_comment, _userID, _number_of_type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAllKvoting(System.IAsyncResult result) {
            return base.Channel.EndAllKvoting(result);
        }
        
        private System.IAsyncResult OnBeginAllKvoting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _comment = ((string)(inValues[0]));
            int _userID = ((int)(inValues[1]));
            int _number_of_type = ((int)(inValues[2]));
            return this.BeginAllKvoting(_comment, _userID, _number_of_type, callback, asyncState);
        }
        
        private object[] OnEndAllKvoting(System.IAsyncResult result) {
            bool retVal = this.EndAllKvoting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllKvotingCompleted(object state) {
            if ((this.AllKvotingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllKvotingCompleted(this, new AllKvotingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllKvotingAsync(string _comment, int _userID, int _number_of_type) {
            this.AllKvotingAsync(_comment, _userID, _number_of_type, null);
        }
        
        public void AllKvotingAsync(string _comment, int _userID, int _number_of_type, object userState) {
            if ((this.onBeginAllKvotingDelegate == null)) {
                this.onBeginAllKvotingDelegate = new BeginOperationDelegate(this.OnBeginAllKvoting);
            }
            if ((this.onEndAllKvotingDelegate == null)) {
                this.onEndAllKvotingDelegate = new EndOperationDelegate(this.OnEndAllKvoting);
            }
            if ((this.onAllKvotingCompletedDelegate == null)) {
                this.onAllKvotingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllKvotingCompleted);
            }
            base.InvokeAsync(this.onBeginAllKvotingDelegate, new object[] {
                        _comment,
                        _userID,
                        _number_of_type}, this.onEndAllKvotingDelegate, this.onAllKvotingCompletedDelegate, userState);
        }
        
        public bool KvotingEventTime(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate) {
            return base.Channel.KvotingEventTime(_comment, _userID, _number_of_type, _mindate, _maxdate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginKvotingEventTime(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKvotingEventTime(_comment, _userID, _number_of_type, _mindate, _maxdate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndKvotingEventTime(System.IAsyncResult result) {
            return base.Channel.EndKvotingEventTime(result);
        }
        
        private System.IAsyncResult OnBeginKvotingEventTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _comment = ((string)(inValues[0]));
            int _userID = ((int)(inValues[1]));
            int _number_of_type = ((int)(inValues[2]));
            System.DateTime _mindate = ((System.DateTime)(inValues[3]));
            System.DateTime _maxdate = ((System.DateTime)(inValues[4]));
            return this.BeginKvotingEventTime(_comment, _userID, _number_of_type, _mindate, _maxdate, callback, asyncState);
        }
        
        private object[] OnEndKvotingEventTime(System.IAsyncResult result) {
            bool retVal = this.EndKvotingEventTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKvotingEventTimeCompleted(object state) {
            if ((this.KvotingEventTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KvotingEventTimeCompleted(this, new KvotingEventTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KvotingEventTimeAsync(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate) {
            this.KvotingEventTimeAsync(_comment, _userID, _number_of_type, _mindate, _maxdate, null);
        }
        
        public void KvotingEventTimeAsync(string _comment, int _userID, int _number_of_type, System.DateTime _mindate, System.DateTime _maxdate, object userState) {
            if ((this.onBeginKvotingEventTimeDelegate == null)) {
                this.onBeginKvotingEventTimeDelegate = new BeginOperationDelegate(this.OnBeginKvotingEventTime);
            }
            if ((this.onEndKvotingEventTimeDelegate == null)) {
                this.onEndKvotingEventTimeDelegate = new EndOperationDelegate(this.OnEndKvotingEventTime);
            }
            if ((this.onKvotingEventTimeCompletedDelegate == null)) {
                this.onKvotingEventTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKvotingEventTimeCompleted);
            }
            base.InvokeAsync(this.onBeginKvotingEventTimeDelegate, new object[] {
                        _comment,
                        _userID,
                        _number_of_type,
                        _mindate,
                        _maxdate}, this.onEndKvotingEventTimeDelegate, this.onKvotingEventTimeCompletedDelegate, userState);
        }
        
        public bool KvotingEventDevice(string _comment, int _userID, int _number_of_type, int _device_id) {
            return base.Channel.KvotingEventDevice(_comment, _userID, _number_of_type, _device_id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginKvotingEventDevice(string _comment, int _userID, int _number_of_type, int _device_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKvotingEventDevice(_comment, _userID, _number_of_type, _device_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndKvotingEventDevice(System.IAsyncResult result) {
            return base.Channel.EndKvotingEventDevice(result);
        }
        
        private System.IAsyncResult OnBeginKvotingEventDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string _comment = ((string)(inValues[0]));
            int _userID = ((int)(inValues[1]));
            int _number_of_type = ((int)(inValues[2]));
            int _device_id = ((int)(inValues[3]));
            return this.BeginKvotingEventDevice(_comment, _userID, _number_of_type, _device_id, callback, asyncState);
        }
        
        private object[] OnEndKvotingEventDevice(System.IAsyncResult result) {
            bool retVal = this.EndKvotingEventDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKvotingEventDeviceCompleted(object state) {
            if ((this.KvotingEventDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KvotingEventDeviceCompleted(this, new KvotingEventDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KvotingEventDeviceAsync(string _comment, int _userID, int _number_of_type, int _device_id) {
            this.KvotingEventDeviceAsync(_comment, _userID, _number_of_type, _device_id, null);
        }
        
        public void KvotingEventDeviceAsync(string _comment, int _userID, int _number_of_type, int _device_id, object userState) {
            if ((this.onBeginKvotingEventDeviceDelegate == null)) {
                this.onBeginKvotingEventDeviceDelegate = new BeginOperationDelegate(this.OnBeginKvotingEventDevice);
            }
            if ((this.onEndKvotingEventDeviceDelegate == null)) {
                this.onEndKvotingEventDeviceDelegate = new EndOperationDelegate(this.OnEndKvotingEventDevice);
            }
            if ((this.onKvotingEventDeviceCompletedDelegate == null)) {
                this.onKvotingEventDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKvotingEventDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginKvotingEventDeviceDelegate, new object[] {
                        _comment,
                        _userID,
                        _number_of_type,
                        _device_id}, this.onEndKvotingEventDeviceDelegate, this.onKvotingEventDeviceCompletedDelegate, userState);
        }
        
        public MessagePanel.MessagePanelService.AsyncGeneralRequest GetEventLogAlarm(int _count, int _userID, int _type_code) {
            return base.Channel.GetEventLogAlarm(_count, _userID, _type_code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEventLogAlarm(int _count, int _userID, int _type_code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEventLogAlarm(_count, _userID, _type_code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public MessagePanel.MessagePanelService.AsyncGeneralRequest EndGetEventLogAlarm(System.IAsyncResult result) {
            return base.Channel.EndGetEventLogAlarm(result);
        }
        
        private System.IAsyncResult OnBeginGetEventLogAlarm(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int _count = ((int)(inValues[0]));
            int _userID = ((int)(inValues[1]));
            int _type_code = ((int)(inValues[2]));
            return this.BeginGetEventLogAlarm(_count, _userID, _type_code, callback, asyncState);
        }
        
        private object[] OnEndGetEventLogAlarm(System.IAsyncResult result) {
            MessagePanel.MessagePanelService.AsyncGeneralRequest retVal = this.EndGetEventLogAlarm(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventLogAlarmCompleted(object state) {
            if ((this.GetEventLogAlarmCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventLogAlarmCompleted(this, new GetEventLogAlarmCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventLogAlarmAsync(int _count, int _userID, int _type_code) {
            this.GetEventLogAlarmAsync(_count, _userID, _type_code, null);
        }
        
        public void GetEventLogAlarmAsync(int _count, int _userID, int _type_code, object userState) {
            if ((this.onBeginGetEventLogAlarmDelegate == null)) {
                this.onBeginGetEventLogAlarmDelegate = new BeginOperationDelegate(this.OnBeginGetEventLogAlarm);
            }
            if ((this.onEndGetEventLogAlarmDelegate == null)) {
                this.onEndGetEventLogAlarmDelegate = new EndOperationDelegate(this.OnEndGetEventLogAlarm);
            }
            if ((this.onGetEventLogAlarmCompletedDelegate == null)) {
                this.onGetEventLogAlarmCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventLogAlarmCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventLogAlarmDelegate, new object[] {
                        _count,
                        _userID,
                        _type_code}, this.onEndGetEventLogAlarmDelegate, this.onGetEventLogAlarmCompletedDelegate, userState);
        }
    }
}
