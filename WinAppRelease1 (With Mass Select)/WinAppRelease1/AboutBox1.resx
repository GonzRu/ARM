<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w9Pa4B0IVQnPwAAAABJRU5ErkJggg==
</value>
  </data>
</root>